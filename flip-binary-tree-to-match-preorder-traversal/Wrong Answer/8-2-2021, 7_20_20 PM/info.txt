{"id":532114445,"lang":"cpp","time":"1 month, 1 week","timestamp":1627912220,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/532114445/","is_pending":"Not Pending","title":"Flip Binary Tree To Match Preorder Traversal","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n\n    int index=0;\n\n    void dfs(TreeNode* root,TreeNode* parent,vector<int>& ans,vector<int>& path)\n    {\n        if(index>=path.size() || !root)return ;        \n        if(path[index]==root->val)\n        {\n            index++;\n            dfs(root->left,root,ans,path);\n            dfs(root->right,root,ans,path);\n        }\n        else\n        {\n            if(!parent)\n            {\n                ans.push_back(-1);\n                return ;\n            }\n            else\n            {\n                if(ans.size()>0 and ans[ans.size()-1]==parent->val)\n                {\n                    ans.clear();\n                    ans.push_back(-1);\n                    return ;\n                }\n                else\n                {\n                    ans.push_back(parent->val);                    \n                    TreeNode* temp=parent->left;\n                    parent->left=parent->right;\n                    parent->right=temp;                                         \n                    index--;\n                    dfs(parent,parent,ans,path);\n                }\n            }\n        }\n    }\n\n    vector<int> flipMatchVoyage(TreeNode* root, vector<int>& voyage) {\n        vector<int>ans;\n        dfs(root,nullptr,ans,voyage);\n        return ans;\n    }\n};","compare_result":"11111111111111111011111111101110111110110001101000100001010010000000000000000000000000000000000000000000","title_slug":"flip-binary-tree-to-match-preorder-traversal"}