{"id":514897605,"lang":"cpp","time":"2 months, 2 weeks","timestamp":1624972741,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/514897605/","is_pending":"Not Pending","title":"Smallest Subsequence of Distinct Characters","memory":"6.5 MB","code":"#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx,avx2,fma\")\nstatic auto _ = []() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n  return 0;\n}();\n\nclass Solution {\npublic:\n    string smallestSubsequence(string s) {\n        int vis[26]={0};\n        stack<char>st;\n        int freq[26]={0};\n        \n        for(int i=0;i<s.length();i++)\n        {\n            freq[s[i]-'a']++;\n        }\n        \n        for(int i=0;i<s.length();i++)\n        {\n            while(!st.empty() and s[i]<st.top() and vis[s[i]-'a']==0 and freq[st.top()-'a']>=1)\n            {\n                vis[st.top()-'a']=0;\n                st.pop();\n            }\n            freq[s[i]-'a']--;\n            if(vis[s[i]-'a']==0)\n            {\n                st.push(s[i]);\n                vis[s[i]-'a']=1;\n            }\n        }\n        string ans=\"\";\n        while(!st.empty())\n        {\n            ans=ans+st.top();\n            st.pop();\n        }\n        reverse(ans.begin(),ans.end());\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111","title_slug":"smallest-subsequence-of-distinct-characters"}