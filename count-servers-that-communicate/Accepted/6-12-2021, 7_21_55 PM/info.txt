{"id":506797186,"lang":"cpp","time":"3Â months","timestamp":1623505915,"status_display":"Accepted","runtime":"200 ms","url":"/submissions/detail/506797186/","is_pending":"Not Pending","title":"Count Servers that Communicate","memory":"23 MB","code":"#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx,avx2,fma\")\nstatic auto _ = []() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n  return 0;\n}();\n\nclass Solution {\npublic:\n\n    int vis[251][251];    \n    int dfs(vector<vector<int>>& grid,int i,int j)\n    {      \n      vis[i][j]=1;\n      int ans=1;\n      for(int k=0;k<grid[0].size();k++)\n      {\n        if(vis[i][k]==0 and grid[i][k]==1)\n        {\n          ans=ans+dfs(grid,i,k);\n        }\n      }\n      for(int k=0;k<grid.size();k++)\n      {\n        if(vis[k][j]==0 and grid[k][j]==1)\n        {\n          ans=ans+dfs(grid,k,j); \n        }\n      }\n      return ans;\n    }\n\n    int countServers(vector<vector<int>>& grid) {\n        memset(vis,0,sizeof(vis));\n        int ans=0;\n        for(int i=0;i<grid.size();i++)\n        {\n          for(int j=0;j<grid[0].size();j++)\n          {\n            if(vis[i][j]==1 || grid[i][j]==0)continue;\n            int x=dfs(grid,i,j);\n            if(x>1)\n                ans+=x;\n          }\n        }\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111","title_slug":"count-servers-that-communicate"}