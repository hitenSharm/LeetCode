{"id":528436426,"lang":"cpp","time":"1 month, 2 weeks","timestamp":1627279989,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/528436426/","is_pending":"Not Pending","title":"Path Sum II","memory":"N/A","code":"#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx,avx2,fma\")\nstatic auto _ = []() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n  return 0;\n}();\n/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n\n    void dfs(TreeNode* root,int& target,vector<vector<int>>& ans,vector<int>& temp,int sumHere)\n    {\n        if(!root) return ;\n        if(sumHere == target and !root->left and !root->right)\n        {\n          ans.push_back(temp);\n          return ;\n        }\n        if(root->right and sumHere+root->right->val<=target)\n        {\n            temp.push_back(root->right->val);\n            dfs(root->right,target,ans,temp,sumHere+root->right->val);\n            temp.pop_back();\n        }\n        if(root->left and sumHere+root->left->val<=target)\n        {\n            temp.push_back(root->left->val);\n            dfs(root->left,target,ans,temp,sumHere+root->left->val);\n            temp.pop_back();\n        }\n        return ;\n    }\n\n    vector<vector<int>> pathSum(TreeNode* root, int targetSum) {\n        vector<vector<int>>ans;\n        vector<int>temp;\n        if(root)\n        {\n            temp.push_back(root->val);\n            dfs(root,targetSum,ans,temp,root->val);\n        }\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111011011111111111011111111011111011011101011111001011100111101010110110111100100110010001","title_slug":"path-sum-ii"}