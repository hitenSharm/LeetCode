{"id":505371391,"lang":"cpp","time":"3Â months","timestamp":1623234257,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/505371391/","is_pending":"Not Pending","title":"Jump Game VI","memory":"N/A","code":"#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx,avx2,fma\")\nstatic auto _ = []() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n  return 0;\n}();\n\nclass Solution {\npublic:\n\n    vector<int>dp;\n\n    int recu(vector<int>& nums,int& k,int index)\n    {\n      if(index>=nums.size())\n        return 0;\n      if(index==nums.size()-1)\n          return nums[index];\n      \n      if(dp[index]!=INT_MIN)\n        return dp[index];\n\n      int cost=nums[index];              \n      int rIndex=index+k;\n      if(rIndex>nums.size()-1)\n          rIndex=nums.size()-1;\n      for(int i=index+1;i<=rIndex;i++)\n      {\n        dp[index]=max(dp[index],cost+recu(nums,k,i));\n        if(nums[i]>=0)\n            break;\n      }\n      return dp[index];\n    }\n\n    int maxResult(vector<int>& nums, int k) {\n      dp.resize(nums.size(),INT_MIN);\n        int ans=recu(nums,k,0);\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111110","title_slug":"jump-game-vi"}