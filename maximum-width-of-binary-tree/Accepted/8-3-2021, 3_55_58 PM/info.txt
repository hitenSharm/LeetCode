{"id":532594011,"lang":"cpp","time":"1 month, 1 week","timestamp":1627986358,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/532594011/","is_pending":"Not Pending","title":"Maximum Width of Binary Tree","memory":"17.2 MB","code":"#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx,avx2,fma\")\nstatic auto _ = []() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n  return 0;\n}();\nclass Solution {\npublic:\n    int widthOfBinaryTree(TreeNode* root) {\n        queue<pair<TreeNode*,unsigned long long>>q;\n        q.push({root,1});\n        unsigned long long maxi=0;\n        while(!q.empty())\n        {\n            unsigned long long len=q.size();\n            unsigned long long l=q.front().second;\n            unsigned long long r;\n            for(unsigned long long i=0;i<len;i++)\n            {\n                r=q.front().second;\n                if(q.front().first->left)q.push({q.front().first->left,q.front().second*2});\n                if(q.front().first->right)q.push({q.front().first->right,q.front().second*2+1});\n                q.pop();\n            }\n            maxi=max(maxi,r-l+1);\n        }\n        return maxi;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-width-of-binary-tree"}