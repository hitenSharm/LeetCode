{"id":503764547,"lang":"cpp","time":"3 months, 1 week","timestamp":1622964471,"status_display":"Accepted","runtime":"124 ms","url":"/submissions/detail/503764547/","is_pending":"Not Pending","title":"Longest Consecutive Sequence","memory":"30.9 MB","code":"#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx,avx2,fma\")\nstatic auto _ = []() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n  return 0;\n}();\n\nclass Solution {\npublic:\n    int longestConsecutive(vector<int>& nums) {\n        unordered_map<int,int>ump;\n        for(int i=0;i<nums.size();i++)\n          ump[nums[i]]=1;\n        int ans=0;\n        for(int i=0;i<nums.size();i++)\n        {\n          if(ump.find(nums[i])==ump.end())continue;\n          else\n          {\n            int prev=nums[i]-1;int fwd=nums[i]+1;\n            ump.erase(nums[i]);\n            int tempAns=1;\n            while(ump.find(prev)!=ump.end())\n            {\n              ump.erase(prev);\n              tempAns++;\n              prev--;\n            }\n            while(ump.find(fwd)!=ump.end())\n            {\n              ump.erase(fwd);\n              tempAns++;\n              fwd++;\n            }\n            ans=max(ans,tempAns);\n          }\n        }\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-consecutive-sequence"}