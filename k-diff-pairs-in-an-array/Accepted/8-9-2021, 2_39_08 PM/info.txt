{"id":535674200,"lang":"cpp","time":"1Â month","timestamp":1628500148,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/535674200/","is_pending":"Not Pending","title":"K-diff Pairs in an Array","memory":"15.3 MB","code":"#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx,avx2,fma\")\nstatic auto _ = []() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n  return 0;\n}();\nclass Solution {\npublic:\n    int findPairs(vector<int>& nums, int k) {\n        unordered_map<int,int>ump;\n        set<pair<int,int>>s;\n        for(int i=0;i<nums.size();i++)\n        ump[nums[i]]++;\n        \n        for(int i=0;i<nums.size();i++)\n        {\n            int x=nums[i];\n            ump[x]--;\n            if(ump.find(x+k)!=ump.end() and ump[x+k]>0 and s.find({x+k,x})==s.end())\n            {\n                s.insert({x,x+k});\n            }\n            if(ump.find(x-k)!=ump.end() and ump[x-k]>0 and s.find({x-k,x})==s.end())\n            {\n                s.insert({x,x-k});\n            }\n            ump[x]++;\n        } \n        // for(auto it:s)\n        //     cout<<it.first<<\" \"<<it.second<<endl;\n        return s.size();\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111","title_slug":"k-diff-pairs-in-an-array"}