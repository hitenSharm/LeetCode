{"id":497451792,"lang":"cpp","time":"3 months, 3 weeks","timestamp":1621833311,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/497451792/","is_pending":"Not Pending","title":"Most Profit Assigning Work","memory":"N/A","code":"#pragma GCC optimize(\"Ofast\")  \n#pragma GCC target(\"avx,avx2,fma\") \nstatic auto _ = [] ()\n{ios_base::sync_with_stdio(false);cin.tie(nullptr);cout.tie(nullptr);return 0;}();\n\nclass Solution {\npublic:\n    int maxProfitAssignment(vector<int>& difficulty, vector<int>& profit, vector<int>& worker) {\n        sort(worker.begin(),worker.end());\n        int i=0;int ans=0;int j=0;      \n        vector<pair<int,int>>vec;\n        for(int i=0;i<difficulty.size();i++)\n        {\n        \tvec.push_back(make_pair(difficulty[i],profit[i]));\n        }\n        sort(vec.begin(),vec.end());\n        int mxProfit=0;\n        while(i<worker.size() && j<vec.size())\n        {            \n        \twhile(j<vec.size() && vec[j].first<=worker[i])\n        \t{                \n        \t\tmxProfit=max(mxProfit,vec[j].second);\n        \t\tj++;\n        \t}            \n        \tans+=mxProfit;\n        \ti++;\n        }\n        return ans;\n\n    }\n};","compare_result":"111011100110111101001010010010110011111001111011010101010","title_slug":"most-profit-assigning-work"}