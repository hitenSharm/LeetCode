{"id":529102414,"lang":"cpp","time":"1 month, 2 weeks","timestamp":1627391189,"status_display":"Accepted","runtime":"192 ms","url":"/submissions/detail/529102414/","is_pending":"Not Pending","title":"Even Odd Tree","memory":"151 MB","code":"#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx,avx2,fma\")\nstatic auto _ = []() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n  return 0;\n}();\n/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool isEvenOddTree(TreeNode* root) {\n        if(!root)return true;\n        int lvl=0;\n        queue<TreeNode*>q;\n        q.push(root);\n        while(!q.empty())\n        {\n            int curr=0;\n            if(lvl%2!=0)curr=INT_MAX;\n            int len=q.size();\n            for(int i=0;i<len;i++)\n            {\n                TreeNode* temp=q.front();q.pop();\n                if(lvl%2==0)\n                {\n                    if(temp->val%2==0 || temp->val<=curr)return false;\n                    curr=temp->val;\n                    if(temp->left)q.push(temp->left);\n                    if(temp->right)q.push(temp->right);\n                }\n                else\n                {\n                    if(temp->val%2!=0 || temp->val>=curr)return false;\n                    curr=temp->val;\n                    if(temp->left)q.push(temp->left);\n                    if(temp->right)q.push(temp->right);\n                }\n            }\n            lvl++;\n        }\n        return true;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"even-odd-tree"}