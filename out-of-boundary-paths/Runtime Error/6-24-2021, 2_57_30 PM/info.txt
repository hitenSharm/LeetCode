{"id":512488727,"lang":"cpp","time":"2 months, 2 weeks","timestamp":1624526850,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/512488727/","is_pending":"Not Pending","title":"Out of Boundary Paths","memory":"N/A","code":"#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx,avx2,fma\")\nstatic auto _ = []() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n  return 0;\n}();\n\nclass Solution {\npublic:\n    \n    int dp[51][51][51];\n    int maxiMoves;\n    int dirs[5]={1,0,-1,0,1};\n    \n    int recu(int i,int j,int maxMoveFromHere,int& m,int &n)\n    {\n        if((i<0 || i>=m || j<0 || j>=n) and maxMoveFromHere<=maxiMoves)\n        return 1;\n        if(maxMoveFromHere<=0)\n        return 0;\n        if(dp[i][j][maxMoveFromHere]!=-1)\n        return dp[i][j][maxMoveFromHere];\n        \n        int ans=0;\n        \n        for(int t=0;t<4;t++)\n        {\n            ans+=recu(i+dirs[t],j+dirs[t+1],maxMoveFromHere-1,m,n);\n        }\n        return dp[i][j][maxMoveFromHere]=ans;\n    }\n\n    int findPaths(int m, int n, int maxMove, int startRow, int startColumn) {\n        for(int i=0;i<51;i++)\n        {\n            for(int j=0;j<51;j++)\n            {\n                for(int k=0;k<51;k++)\n                dp[i][j][k]=-1;\n            }\n        }\n        maxiMoves=maxMove;\n        int ans=recu(startRow,startColumn,maxMove,m,n);\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111100000000000000","title_slug":"out-of-boundary-paths"}