{"id":505294054,"lang":"cpp","time":"3Â months","timestamp":1623220151,"status_display":"Accepted","runtime":"184 ms","url":"/submissions/detail/505294054/","is_pending":"Not Pending","title":"Find the Most Competitive Subsequence","memory":"109.7 MB","code":"#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx,avx2,fma\")\nstatic auto _ = []() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n  return 0;\n}();\n\nclass Solution {\npublic:\n    vector<int> mostCompetitive(vector<int>& nums, int k) {\n       vector<int>st;\n       for(int i=0;i<nums.size();i++)\n       {\n        while(!st.empty() and nums[i]<st.back() and nums.size()-i+st.size()-1>=k)\n          st.pop_back();\n        if(st.size()<k)\n          st.push_back(nums[i]);\n       } \n       return st;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-the-most-competitive-subsequence"}