{"id":543997075,"lang":"cpp","time":"2 weeks, 4 days","timestamp":1629900163,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/543997075/","is_pending":"Not Pending","title":"Shuffle an Array","memory":"N/A","code":"#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx,avx2,fma\")\nstatic auto _ = []() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n  return 0;\n}();\n\nclass Solution {\npublic:\n    vector<int>ogArr;\n    vector<int>arr;\n    Solution(vector<int>& nums) {\n        ogArr=nums;\n        arr=nums;\n        sort(arr.begin(),arr.end());\n    }\n    \n    /** Resets the array to its original configuration and return it. */\n    vector<int> reset() {\n        return ogArr;\n    }\n    \n    /** Returns a random shuffling of the array. */\n    vector<int> shuffle() {\n        return arr;\n    }\n};\n\n/**\n * Your Solution object will be instantiated and called as such:\n * Solution* obj = new Solution(nums);\n * vector<int> param_1 = obj->reset();\n * vector<int> param_2 = obj->shuffle();\n */","compare_result":"1111110000","title_slug":"shuffle-an-array"}