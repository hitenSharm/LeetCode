{"id":519093340,"lang":"cpp","time":"2 months, 1 week","timestamp":1625719042,"status_display":"Accepted","runtime":"268 ms","url":"/submissions/detail/519093340/","is_pending":"Not Pending","title":"Minimum Sideway Jumps","memory":"264.2 MB","code":"#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx,avx2,fma\")\nstatic auto _ = []() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n  return 0;\n}();\n\nclass Solution {\npublic:\n    int dp[4][500001];\n    int recu(vector<int>& obstacles,int currLane,int index)\n    {\n        if(index>=obstacles.size()-2)\n        return 0;\n        if(currLane == obstacles[index]) return 1e6;\n        if(dp[currLane][index]!=-1)\n        return dp[currLane][index];\n        \n        int ans=INT_MAX;\n        if(index+1<obstacles.size() and obstacles[index+1]!=currLane)\n            return dp[currLane][index]=recu(obstacles,currLane,index+1);\n        \n        return dp[currLane][index]= 1+min(recu(obstacles,((currLane+1)%3 == 0)?3:(currLane+1)%3,index),recu(obstacles,((currLane+2)%3 == 0)?3:(currLane+2)%3,index));        \n    }\n\n    int minSideJumps(vector<int>& obstacles) {\n        memset(dp,-1,sizeof(dp));\n        int ans=recu(obstacles,2,0);\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111","title_slug":"minimum-sideway-jumps"}