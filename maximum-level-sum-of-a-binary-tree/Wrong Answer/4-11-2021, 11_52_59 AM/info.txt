{"id":479187112,"lang":"cpp","time":"5Â months","timestamp":1618122179,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/479187112/","is_pending":"Not Pending","title":"Maximum Level Sum of a Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    map<int,int>mp;\n    \n    void lvlByLvl(TreeNode* root , int lvl)\n    {\n        if(!root)\n        return ;\n        \n        int ld= (!root->left ? 0 : root->left->val);\n        int rd= (!root->right ? 0 : root->right->val); \n        \n        mp[lvl]=ld+rd;\n                      \n        lvlByLvl(root->left,lvl+1);\n        lvlByLvl(root->right,lvl+1);\n        \n    }\n\n    int maxLevelSum(TreeNode* root) {\n        int lvl=1;\n        int m=root->val;\n        int mlvl=1;\n        mp[lvl]=m;\n        lvlByLvl(root,lvl+1);\n        \n        for(auto it: mp)\n        {\n            if(m<it.second)\n            {\n                m=it.second;\n                mlvl=it.first;\n            }\n        }\n        \n        return mlvl;\n    }\n};","compare_result":"1111000010000000000000000000000000000000","title_slug":"maximum-level-sum-of-a-binary-tree"}