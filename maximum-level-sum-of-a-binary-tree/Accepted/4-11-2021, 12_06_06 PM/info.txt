{"id":479191207,"lang":"cpp","time":"5Â months","timestamp":1618122966,"status_display":"Accepted","runtime":"172 ms","url":"/submissions/detail/479191207/","is_pending":"Not Pending","title":"Maximum Level Sum of a Binary Tree","memory":"104.9 MB","code":"void preorder(TreeNode* root, map<int,int>&mp, int level)\n{\n    if(root==NULL) return;\n    level++;\n    if(mp.count(level)==0)// first time\n    mp[level]=root->val;\n    else    \n    mp[level]+=root->val;\n    \n    preorder(root->left,mp,level);\n    preorder(root->right,mp,level);\n}\n\n\nclass Solution {\npublic:\n   int maxLevelSum(TreeNode* root) {\n        if(root==NULL) return 0;\n        map<int,int>mp; // the key store the level and the value stores the sum at\n                            // that level\n       int level=0; \n       preorder(root,mp,level);\n       \n       int ans;\n       int maxa=INT_MIN;\n       for(auto x: mp)\n       {\n           if(x.second>maxa)\n           {\n               maxa=x.second;\n               ans=x.first;\n           }\n       }\n       \n       return ans;\n      \n    }\n};","compare_result":"1111111111111111111111111111111111111111","title_slug":"maximum-level-sum-of-a-binary-tree"}