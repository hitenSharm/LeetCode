{"id":509685003,"lang":"cpp","time":"2 months, 3 weeks","timestamp":1624018551,"status_display":"Accepted","runtime":"304 ms","url":"/submissions/detail/509685003/","is_pending":"Not Pending","title":"Range Sum Query - Mutable","memory":"151.2 MB","code":"#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx,avx2,fma\")\nstatic auto _ = []() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n  return 0;\n}();\n\nclass NumArray {\npublic:\n\n    vector<int>bit;\n    int n;\n    vector<int>globe;\n    \n    NumArray(vector<int>& nums) {\n        n=nums.size()+1;\n        globe=nums;\n        bit.resize(n,0);\n        for(int i=0;i<nums.size();i++)\n        {\n            init(i,nums[i]);            \n        }\n    }\n    \n    void init(int index,int val)\n    {\n        index++;\n        for(; index<n ; index+=(index & -index))\n        {\n            bit[index]+=val;\n        }\n    }\n    \n    void update(int index, int val) {\n        int diff=val-globe[index];\n        globe[index]=val;\n        init(index,diff);\n    }\n    \n    int sumRange(int left, int right) {\n        int ansL=0,ansR=0;\n        left;right++;\n        for(;left>0 ; left-=(left & -left))\n        {\n            ansL+=bit[left];\n        }\n        for(;right>0 ; right-=(right & -right))\n        {\n            ansR+=bit[right];\n        }\n        return (ansR-ansL);\n    }\n};\n","compare_result":"111111111111111","title_slug":"range-sum-query-mutable"}