{"id":502333602,"lang":"cpp","time":"3 months, 1 week","timestamp":1622711352,"status_display":"Accepted","runtime":"76 ms","url":"/submissions/detail/502333602/","is_pending":"Not Pending","title":"Maximum Area of a Piece of Cake After Horizontal and Vertical Cuts","memory":"31.5 MB","code":"#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx,avx2,fma\")\nstatic auto _ = []() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n  return 0;\n}();\n\nclass Solution {\npublic:\n    int maxArea(int h, int w, vector<int>& horizontalCuts, vector<int>& verticalCuts) {\n        horizontalCuts.push_back(h);horizontalCuts.push_back(0);\n        verticalCuts.push_back(w);verticalCuts.push_back(0);\n        sort(horizontalCuts.begin(),horizontalCuts.end());\n        sort(verticalCuts.begin(),verticalCuts.end());\n        int l=horizontalCuts[0];int b=verticalCuts[0];\n        \n        for(int i=1;i<horizontalCuts.size();i++)\n          l=max(l,horizontalCuts[i]-horizontalCuts[i-1]);\n        for(int i=1;i<verticalCuts.size();i++)\n          b=max(b,verticalCuts[i]-verticalCuts[i-1]);\n        long long mod=1000000007;\n        int ans=((l%mod) * (b%mod))%mod;\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111","title_slug":"maximum-area-of-a-piece-of-cake-after-horizontal-and-vertical-cuts"}