{"id":455154495,"lang":"cpp","time":"7Â months","timestamp":1613126390,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/455154495/","is_pending":"Not Pending","title":"Letter Combinations of a Phone Number","memory":"7.6 MB","code":"class Solution {\npublic:\n    \n    bool backtrack(unordered_map<char, string>phoneMap,vector<string> &ans,string temp ,string digits,int curr){\n        if(curr>=digits.length()){ \n            ans.push_back(temp);\n            return true;\n        }\n        //get candidates to start tracking from\n        string candidates=phoneMap[digits[curr]];\n        for(int i=0;i<candidates.length();i++){\n            //make a move\n            temp=temp+candidates[i];\n            //move forward\n            backtrack(phoneMap,ans,temp,digits,curr+1);\n            //undo move\n            temp.pop_back();\n        }\n        return false;\n    }\n    \n    \n    vector<string> letterCombinations(string digits) {\n        if(digits.length()==0)\n            return vector<string>();\n        unordered_map<char, string>phoneMap = { {'2',\"abc\"},{'3',\"def\"},{'4',\"ghi\"},{'5',\"jkl\"},{'6',\"mno\"},\n\t\t{'7',\"pqrs\"},{'8',\"tuv\"},{'9',\"wxyz\"} };\n        \n        vector<string>ans;\n        string temp;\n        int currIndex=0;\n        backtrack(phoneMap,ans,temp,digits,currIndex);\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111","title_slug":"letter-combinations-of-a-phone-number"}