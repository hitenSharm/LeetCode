{"id":478508521,"lang":"cpp","time":"5Â months","timestamp":1617972579,"status_display":"Accepted","runtime":"84 ms","url":"/submissions/detail/478508521/","is_pending":"Not Pending","title":"Partition Equal Subset Sum","memory":"10.5 MB","code":"class Solution {\npublic:\n    \n    bool makeSum(vector<int>&memo ,vector<int>& nums, int sum,int index,int tsum)\n    {\n        if(sum==0)\n            return 1;\n        if(sum<0 || index>=nums.size() || (sum>0) && index>=nums.size())\n            return 0;\n        \n        if(memo[sum]!=-1)\n            return memo[sum];\n        \n        return memo[tsum-sum]= memo[sum] = max(makeSum(memo,nums,sum-nums[index],index+1,tsum),makeSum(memo,nums,sum,index+1,tsum));\n        \n    }\n    \n    bool canPartition(vector<int>& nums) {\n        int sum=0;\n        for(int i=0;i<nums.size();i++)\n            sum+=nums[i];\n        if(sum%2!=0)\n            return false;\n        vector<int>memo(sum+1,-1);\n        return makeSum(memo,nums,sum/2,0,sum)==1 ? true : false;    \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"partition-equal-subset-sum"}