{"id":478509050,"lang":"cpp","time":"5Â months","timestamp":1617972717,"status_display":"Accepted","runtime":"88 ms","url":"/submissions/detail/478509050/","is_pending":"Not Pending","title":"Partition Equal Subset Sum","memory":"9.1 MB","code":"class Solution {\npublic:\n    bool canPartition(vector<int>& nums) {\n        int sum = 0;\n        for (auto a : nums) // Sum up the array\n            sum += a;\n        \n        if (sum % 2) // If the sum is odd - we can never find two equal partitions\n            return false;\n        \n        sum /= 2;\n        vector<bool> dp(sum+1, false); // dp keeps for each number if it has a subset or not\n        dp[0] = true;\n        \n        for (auto a : nums) {\n            for (int i = sum; i >= a; i--) {\n                dp[i] = dp[i] || dp[i-a]; // for each number, either we use it or we don't\n            } \n        }\n        return dp[sum];\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"partition-equal-subset-sum"}