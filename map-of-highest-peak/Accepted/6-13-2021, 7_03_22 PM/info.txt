{"id":507323104,"lang":"cpp","time":"3Â months","timestamp":1623591202,"status_display":"Accepted","runtime":"812 ms","url":"/submissions/detail/507323104/","is_pending":"Not Pending","title":"Map of Highest Peak","memory":"261.3 MB","code":"#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx,avx2,fma\")\nstatic auto _ = []() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n  return 0;\n}();\n\nclass Solution {\npublic:\n\n    vector<vector<int>>vis;\n    \n    bool isSafe(int i,int j,vector<vector<int>>& vis)\n    {\n      if(i>=0 and j>=0 and i<vis.size() and j<vis[0].size() and vis[i][j]==0)\n        return true;\n      return false;\n    }\n\n    vector<vector<int>> highestPeak(vector<vector<int>>& isWater) {        \n        vis.resize(isWater.size(),vector<int>(isWater[0].size(),0));        \n        queue<vector<int>>bfs;\n        for(int i=0;i<isWater.size();i++)\n        {\n          for(int j=0;j<isWater[0].size();j++)\n          {\n            if(isWater[i][j]==1)\n            {\n              isWater[i][j]=0;\n              vis[i][j]=1;\n              bfs.push({i,j});\n            }\n          }\n        }\n        int cnt=1;\n        while(!bfs.empty())\n        {\n          int len=bfs.size();\n          for(int k=0;k<len;k++)\n          {\n            vector<int>tmp=bfs.front();\n            bfs.pop();\n            int i=tmp[0],j=tmp[1];                        \n            if(isSafe(i+1,j,vis))\n            {\n              isWater[i+1][j]=cnt;\n              bfs.push({i+1,j});\n              vis[i+1][j]=1;\n            } \n            if(isSafe(i-1,j,vis))\n            {\n              isWater[i-1][j]=cnt;\n              bfs.push({i-1,j});\n              vis[i-1][j]=1;\n            } \n            if(isSafe(i,j+1,vis))\n            {\n              isWater[i][j+1]=cnt;\n              bfs.push({i,j+1});\n              vis[i][j+1]=1;\n            } \n            if(isSafe(i,j-1,vis))\n            {\n              isWater[i][j-1]=cnt;\n              bfs.push({i,j-1});\n              vis[i][j-1]=1;\n            }\n          }\n          cnt++;\n        }\n        return isWater;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111","title_slug":"map-of-highest-peak"}