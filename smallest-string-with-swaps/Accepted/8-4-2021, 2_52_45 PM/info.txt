{"id":533113624,"lang":"cpp","time":"1 month, 1 week","timestamp":1628068965,"status_display":"Accepted","runtime":"240 ms","url":"/submissions/detail/533113624/","is_pending":"Not Pending","title":"Smallest String With Swaps","memory":"75 MB","code":"#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx,avx2,fma\")\nstatic auto _ = []() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n  return 0;\n}();\n\nclass Solution {\npublic:\n\n    unordered_map<int,vector<int>>adjList;\n    int vis[100001]={0};\n    \n    void dfs(int index,vector<int>& newIndexes,string& og)\n    {\n        vis[index]=1;\n        newIndexes.push_back(index);\n        vector<int>& candidates=adjList[index];        \n        for(int i=0;i<candidates.size();i++)\n        {\n            if(vis[candidates[i]]==1)continue;\n            dfs(candidates[i],newIndexes,og);\n        }\n        return ;\n    }\n\n    string smallestStringWithSwaps(string s, vector<vector<int>>& pairs) {\n        for(int i=0;i<pairs.size();i++)\n        {\n            adjList[pairs[i][0]].push_back(pairs[i][1]);\n            adjList[pairs[i][1]].push_back(pairs[i][0]);\n        }\n        for(int i=0;i<s.length();i++)\n        {\n            if(vis[i]==0)\n            {\n                vector<int>newIndexes;\n                dfs(i,newIndexes,s);\n                string temp=\"\";\n                for(int j=0;j<newIndexes.size();j++)\n                {                    \n                    temp+=s[newIndexes[j]];\n                }                \n                sort(temp.begin(),temp.end());                \n                sort(newIndexes.begin(),newIndexes.end());\n                for(int j=0;j<newIndexes.size();j++)\n                {\n                    s[newIndexes[j]]=temp[j];\n                }\n                newIndexes.clear();\n            }\n        }\n        return s;\n    }\n};","compare_result":"111111111111111111111111111111111111","title_slug":"smallest-string-with-swaps"}