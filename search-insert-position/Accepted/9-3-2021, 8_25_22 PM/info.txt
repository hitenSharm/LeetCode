{"id":548906917,"lang":"cpp","time":"1 week, 2 days","timestamp":1630680922,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/548906917/","is_pending":"Not Pending","title":"Search Insert Position","memory":"9.6 MB","code":"#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx,avx2,fma\")\nstatic auto _ = []() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n  return 0;\n}();\n\nclass Solution {\npublic:\n    int searchInsert(vector<int>& nums, int target) {\n        int l=0,r=nums.size()-1;\n        int ans;\n        while(l<=r)\n        {\n            int m=l+(r-l)/2;\n            if(nums[m]==target)return m;\n            if(nums[m]>target)\n            {\n                ans=m;\n                r=m-1;\n            }\n            else\n            {\n                ans=m+1;\n                l=m+1;\n            }\n        }\n        if(ans==-1)ans=0;\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111","title_slug":"search-insert-position"}