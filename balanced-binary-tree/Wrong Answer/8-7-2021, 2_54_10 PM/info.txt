{"id":534618030,"lang":"cpp","time":"1Â month","timestamp":1628328250,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/534618030/","is_pending":"Not Pending","title":"Balanced Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    int goLeft(TreeNode* root)\n    {\n        if(!root)return 0;\n        return 1+goLeft(root->left);\n    }\n    \n    int goRight(TreeNode* root)\n    {\n        if(!root)return 0;\n        return 1+goRight(root->right);\n    }\n    \n    bool isBalanced(TreeNode* root) {\n        int left=goLeft(root);\n        int right=goRight(root);\n        if(abs(left-right)<=1)return true;\n        \n        return false;\n    }\n};","compare_result":"111111100101001011110011100111100111111111111000001010011110010100000111111111111111111111111111111111111100000000000000111001000000001010000100000011000100000000100111000000000000001111111111111111111111111111111111111010001001","title_slug":"balanced-binary-tree"}