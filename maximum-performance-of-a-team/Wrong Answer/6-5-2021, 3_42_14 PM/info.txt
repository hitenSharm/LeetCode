{"id":503302673,"lang":"cpp","time":"3 months, 1 week","timestamp":1622887934,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/503302673/","is_pending":"Not Pending","title":"Maximum Performance of a Team","memory":"N/A","code":"#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx,avx2,fma\")\nstatic auto _ = []() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n  return 0;\n}();\n\nclass Solution {\npublic:\n    int maxPerformance(int n, vector<int>& speed, vector<int>& efficiency, int k) {\n        vector<pair<int,int>>vec;\n        long long mod=1000000007;\n        for(int i=0;i<n;i++)\n        {\n          vec.push_back(make_pair(efficiency[i],speed[i]));\n        }\n        sort(vec.rbegin(),vec.rend());\n        int ele=0;int sumHere=0;int ans=0;\n        priority_queue <int, vector<int>, greater<int> > pq;\n\n        for(int i=0;i<vec.size();)\n        {\n          int eff;\n          while(ele<k and i<vec.size())\n          {\n            eff=vec[i].first;\n            sumHere=sumHere+vec[i].second;\n            pq.push(vec[i].second);\n            i++;ele++;\n          }\n          int temp=(eff%mod * sumHere%mod)%mod;\n          ans=max(ans,temp);\n          sumHere=sumHere-pq.top();\n          ele--;\n          pq.pop();\n        }\n        return ans;\n    }\n};","compare_result":"111001110111011110101100000000000000000000000000000000","title_slug":"maximum-performance-of-a-team"}