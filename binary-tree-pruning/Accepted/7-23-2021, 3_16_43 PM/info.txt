{"id":527002843,"lang":"cpp","time":"1 month, 3 weeks","timestamp":1627033603,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/527002843/","is_pending":"Not Pending","title":"Binary Tree Pruning","memory":"9.6 MB","code":"#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx,avx2,fma\")\nstatic auto _ = []() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n  return 0;\n}();\n\nclass Solution {\npublic:\n\n    int pruning(TreeNode* root)\n    {\n        if(root==NULL)return 0;\n        \n        int l=0;\n        int r=0;\n        \n        if(root->left)\n        l=root->left->val+pruning(root->left);\n        if(root->right)\n        r=root->right->val+pruning(root->right);\n        \n        if(l==0)\n        root->left=NULL;\n        if(r==0)\n        root->right=NULL;\n        if(l==0 and r==0)\n        root=NULL;\n        \n        return l+r;\n    }\n\n    TreeNode* pruneTree(TreeNode* root) {\n        int temp=pruning(root);\n        if(temp==0 and root->val!=1)\n        root=NULL;\n        return root;\n    }\n};","compare_result":"111111111111111111111111111111","title_slug":"binary-tree-pruning"}