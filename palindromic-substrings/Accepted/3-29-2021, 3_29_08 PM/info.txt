{"id":473812991,"lang":"cpp","time":"5 months, 2 weeks","timestamp":1617011948,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/473812991/","is_pending":"Not Pending","title":"Palindromic Substrings","memory":"13.2 MB","code":"class Solution {\npublic:\n    int count;\n    int countSubstrings(string s) \n    {\n        count=0;\n        int n=s.length();\n        //If string is of length 0 or 1 then it is a palindrome of length 1\n        if(n<2)\n            return 1;\n        //We will expand around centers from i=0 to i=n-1 \n        for(int i=0;i<n;i++)\n        {\n            //For odd length strings middle character will be a palindrome\n            //We need to expand from that middle character towards left and right\n            expand(s,i,i);\n            //For even length strings there will be two middle characters\n            //We need to expand from first char to left and from second char to right\n            expand(s,i,i+1);\n        }\n        \n        return count;\n    }\n     void expand(string s,int i,int j)\n    {\n        //Simple algorithm to check the expanse of Palindrome\n        while(i>=0 && j<s.length() && s[i]==s[j])\n        {\n            i--;\n            j++;\n            count++;\n        }\n   \n        return;\n    }\n    \n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"palindromic-substrings"}