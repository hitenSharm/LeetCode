{"id":535619728,"lang":"cpp","time":"1Â month","timestamp":1628491016,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/535619728/","is_pending":"Not Pending","title":"Convert Sorted List to Binary Search Tree","memory":"31.2 MB","code":"#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx,avx2,fma\")\nstatic auto _ = []() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n  return 0;\n}();\n\nclass Solution {\npublic: \n\n    TreeNode* makeTree(ListNode* head,ListNode* tail)\n    {\n        if(head==tail)return nullptr;\n        ListNode* slow=head;\n        ListNode* fast=head;\n        ListNode* mid;\n        while(fast!=tail and fast->next!=tail)\n        {\n            fast=fast->next->next;\n            slow=slow->next;\n        }\n        mid=slow;\n        TreeNode* root = new TreeNode(mid->val);\n        root->left=makeTree(head,mid);\n        root->right=makeTree(mid->next,tail);\n        return root;\n    }\n\n    TreeNode* sortedListToBST(ListNode* head) {\n        ListNode* tail=head;\n        if(!head)return nullptr;\n        while(tail)\n        {\n            tail=tail->next;\n        }\n        TreeNode* ans=makeTree(head,tail);\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111","title_slug":"convert-sorted-list-to-binary-search-tree"}