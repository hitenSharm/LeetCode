{"id":535612407,"lang":"cpp","time":"1Â month","timestamp":1628489894,"status_display":"Accepted","runtime":"24 ms","url":"/submissions/detail/535612407/","is_pending":"Not Pending","title":"Convert Sorted List to Binary Search Tree","memory":"31.4 MB","code":"#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx,avx2,fma\")\nstatic auto _ = []() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n  return 0;\n}();\n\nclass Solution {\npublic:\n\n    TreeNode* makeTree(vector<int>& arr,int l,int r)\n    {\n        if(l>r || l<0 || r>=arr.size())return NULL;\n        int m=l+(r-l)/2;\n        TreeNode* root=new TreeNode(arr[m]);\n        root->left=makeTree(arr,l,m-1);\n        root->right=makeTree(arr,m+1,r);\n        return root;\n    }\n\n    TreeNode* sortedListToBST(ListNode* head) {\n        vector<int>arr;\n        while(head)\n        {\n            arr.push_back(head->val);\n            head=head->next;\n        }\n        TreeNode* root=makeTree(arr,0,arr.size()-1);\n        return root;\n    }\n};","compare_result":"11111111111111111111111111111111","title_slug":"convert-sorted-list-to-binary-search-tree"}