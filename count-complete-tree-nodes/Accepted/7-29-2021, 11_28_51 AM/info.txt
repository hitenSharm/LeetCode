{"id":529995977,"lang":"cpp","time":"1 month, 2 weeks","timestamp":1627538331,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/529995977/","is_pending":"Not Pending","title":"Count Complete Tree Nodes","memory":"30.9 MB","code":"#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx,avx2,fma\")\nstatic auto _ = []() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n  return 0;\n}();\n/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int subtract=0;\n    int cntHt(TreeNode* root)\n    {\n        if(!root)return 0;\n        int cnt=1;\n        while(root)\n        {\n            if(root->left)\n            {\n                cnt++;\n                root=root->left;\n            }\n            else\n            break;\n        }\n        return cnt;\n    }\n    \n    void extras(TreeNode* root,int currHt,int& ht)\n    {\n        if(!root)return ;\n        \n        if(currHt==ht-1)\n        {\n            if(root->left and root->right)return ;\n            \n            if(root->left and !root->right)\n            {\n                subtract++;\n                return ;\n            }\n            \n            if(!root->left and !root->right)\n            {\n                subtract+=2;\n                return ;\n            }\n        }\n        extras(root->right,currHt+1,ht);\n        extras(root->left,currHt+1,ht);\n    }\n    \n    int countNodes(TreeNode* root) {\n        int ht=cntHt(root);        \n        int ans=(1 << ht)-1;\n        extras(root,1,ht);\n        ans=ans-subtract;\n        return ans;\n    }\n};","compare_result":"111111111111111111","title_slug":"count-complete-tree-nodes"}