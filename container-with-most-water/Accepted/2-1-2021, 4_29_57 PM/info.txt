{"id":450551981,"lang":"cpp","time":"7 months, 1 week","timestamp":1612177197,"status_display":"Accepted","runtime":"180 ms","url":"/submissions/detail/450551981/","is_pending":"Not Pending","title":"Container With Most Water","memory":"20.5 MB","code":"class Solution {\npublic:\n    int maxArea(vector<int>& height) {\n        int maxi[height.size()];\n        int mini[height.size()];\n        vector< pair <int,int> > vect; \n        for(int i=0;i<height.size();i++){\n            vect.push_back( make_pair(height[i],i+1));\n        }\n        sort(vect.begin(), vect.end());\n        int n=height.size();\n        \n        for(int i=n-1;i>0;i--){ \n            if(i==n-1){ \n            maxi[i]=vect[i].second;\n            mini[i]=vect[i].second;\n            }\n            else{\n                maxi[i]=max(maxi[i+1],vect[i].second);\n            mini[i]=min(mini[i+1],vect[i].second);\n            }\n            cout<<maxi[i]<<\" \"<<mini[i]<<endl;\n        }        \n        int ans=0;\n        for(int i=0;i<n-1;i++){ \n            int currH=vect[i].first;\n            int currB=max(abs(vect[i].second-maxi[i+1]),abs(vect[i].second-mini[i+1]));\n            //cout<<abs(vect[i].second-maxi[i+1])<<\" \"<<abs(vect[i].second-mini[i+1])<<endl;\n            ans=max(ans,(currH*currB));\n        }\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111","title_slug":"container-with-most-water"}