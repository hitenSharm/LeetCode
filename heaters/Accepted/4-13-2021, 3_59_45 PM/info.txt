{"id":480088865,"lang":"cpp","time":"5Â months","timestamp":1618309785,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/480088865/","is_pending":"Not Pending","title":"Heaters","memory":"25.9 MB","code":"#pragma GCC optimize(\"Ofast\")  \n#pragma GCC target(\"avx,avx2,fma\") \nstatic auto _ = [] ()\n{ios_base::sync_with_stdio(false);cin.tie(nullptr);cout.tie(nullptr);return 0;}();\n\nclass Solution {\npublic:\n    int findRadius(vector<int>& houses, vector<int>& heaters) {\n        int maxRadi=0;\n        sort(houses.begin(),houses.end());\n        sort(heaters.begin(),heaters.end());\n        vector<int>ans(houses.size(),INT_MAX);\n        \n        int i=0;\n        int j=0;\n        \n        for(;i<houses.size() && j<heaters.size();)\n        {\n            if(houses[i]<=heaters[j])\n            {\n                ans[i]=abs(heaters[j]-houses[i]);\n                i++;\n            }\n            else\n            {\n                j++;\n            }\n        }\n        i=houses.size()-1;\n        j=heaters.size()-1;\n        for(;i>=0 && j>=0;)\n        {\n            if(houses[i]>=heaters[j])\n            {\n                ans[i]=min(ans[i],abs(heaters[j]-houses[i]));\n                i--;\n            }\n            else\n            {\n                j--;\n            }\n        }\n        return *max_element(ans.begin(), ans.end());\n        \n    }\n};","compare_result":"111111111111111111111111111111","title_slug":"heaters"}