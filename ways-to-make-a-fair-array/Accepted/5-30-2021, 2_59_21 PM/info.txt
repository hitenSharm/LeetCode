{"id":500306780,"lang":"cpp","time":"3 months, 2 weeks","timestamp":1622366961,"status_display":"Accepted","runtime":"116 ms","url":"/submissions/detail/500306780/","is_pending":"Not Pending","title":"Ways to Make a Fair Array","memory":"115.9 MB","code":"#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx,avx2,fma\")\nstatic auto _ = []() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n  return 0;\n}();\n\nclass Solution {\npublic:\n    int waysToMakeFair(vector<int>& nums) {\n        vector<int>even;\n        vector<int>odd;\n        int ev=0;int od=0;\n        even.push_back(ev);odd.push_back(od);\n        for(int i=0;i<nums.size();i++)\n        {\n          if((i | 1)>i)\n            ev+=nums[i];\n          else\n            od+=nums[i];\n          even.push_back(ev);odd.push_back(od);\n        }\n        int cnt=0;int n=nums.size();\n        for(int i=0;i<nums.size();i++)\n        {\n          int odCnt=even[n]-even[i+1]+odd[i];\n          int evCnt=odd[n]-odd[i+1]+even[i];\n          if(odCnt==evCnt)\n            cnt++;\n        }\n        return cnt;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"ways-to-make-a-fair-array"}