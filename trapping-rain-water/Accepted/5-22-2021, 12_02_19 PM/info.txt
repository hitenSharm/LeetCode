{"id":496532063,"lang":"cpp","time":"3 months, 3 weeks","timestamp":1621665139,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/496532063/","is_pending":"Not Pending","title":"Trapping Rain Water","memory":"14.4 MB","code":"#pragma GCC optimize(\"Ofast\")  \n#pragma GCC target(\"avx,avx2,fma\") \nstatic auto _ = [] ()\n{ios_base::sync_with_stdio(false);cin.tie(nullptr);cout.tie(nullptr);return 0;}();\n\nclass Solution {\npublic:\n    int trap(vector<int>& height) {\n        int n=height.size();\n        int ans=0;\n        if(n==0)\n            return 0;\n        int htLeft[n];\n        int tempMax=height[0];\n        htLeft[0]=height[0];\n        for(int i=1;i<n;i++)\n        {\n        \thtLeft[i]=max(tempMax,height[i-1]);\n        \ttempMax=max(tempMax,height[i-1]);\n        }        \t\n        int htRight[n];\n        htRight[n-1]=height[n-1];\n        tempMax=height[n-1];\n        int ht[n];\n        ht[0]=height[0];\n        ht[n-1]=height[n-1];\n        for(int i=n-2;i>=0;i--)\n        {\n        \ttempMax=max(tempMax,height[i+1]);\n        \thtRight[i]=tempMax;\n        \tht[i]=min(htRight[i],htLeft[i]);\n        }        \n\n        for(int i=0;i<n;i++)\n        {\n        \tif(ht[i]>=height[i])\n        \t{\n        \t\tans=ans+(ht[i]-height[i]);\n        \t}\n        }\n\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"trapping-rain-water"}