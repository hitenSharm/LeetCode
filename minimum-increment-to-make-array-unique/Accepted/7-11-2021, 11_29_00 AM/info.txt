{"id":520640089,"lang":"cpp","time":"2Â months","timestamp":1625983140,"status_display":"Accepted","runtime":"40 ms","url":"/submissions/detail/520640089/","is_pending":"Not Pending","title":"Minimum Increment to Make Array Unique","memory":"26.2 MB","code":"#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx,avx2,fma\")\nstatic auto _ = []() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n  return 0;\n}();\n\nclass Solution {\npublic:\n    int minIncrementForUnique(vector<int>& nums) {\n        sort(nums.begin(),nums.end());\n        int cnt=0;\n        int maxi=INT_MIN;\n        int i=0,j=0;\n        while(i<nums.size())\n        {\n            while(j<nums.size() and nums[i]==nums[j])\n                j++;\n            if(nums[i]>maxi)\n            {\n                int len=j-i-1;\n                cnt=cnt+(len*(len+1)/2);\n                maxi=nums[i]+len;\n                i=j;\n            }\n            else\n            {\n                int len=j-i;\n                int inc=maxi-nums[i];\n                cnt=cnt+(inc*len)+(len*(len+1)/2);\n                maxi=maxi+len;\n                i=j;\n            }\n        }\n        return cnt;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-increment-to-make-array-unique"}