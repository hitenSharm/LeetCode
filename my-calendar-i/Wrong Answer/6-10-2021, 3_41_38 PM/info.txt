{"id":505870321,"lang":"cpp","time":"3Â months","timestamp":1623319898,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/505870321/","is_pending":"Not Pending","title":"My Calendar I","memory":"N/A","code":"#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx,avx2,fma\")\nstatic auto _ = []() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n  return 0;\n}();\n\nclass MyCalendar {\npublic:\n    MyCalendar() {       \n    }\n    map<int,int> booked;\n    bool book(int start, int end) {\n       if(booked.size()==0)\n       {\n          booked.insert({start,end});\n          return true;\n       }\n       auto it=booked.lower_bound(start);       \n       if(it!=booked.end())       \n       {\n        if(start<(*it).second)\n        return false;\n       }\n\n       if(it==booked.end())\n       {\n          auto iter2=prev(it,1);\n          if(start<(*iter2).second)\n          return false;\n       }\n       booked.insert({start,end});\n       return true;\n      \n    }\n};\n\n/**\n * Your MyCalendar object will be instantiated and called as such:\n * MyCalendar* obj = new MyCalendar();\n * bool param_1 = obj->book(start,end);\n */","compare_result":"110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"my-calendar-i"}