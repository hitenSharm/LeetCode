{"id":520736619,"lang":"cpp","time":"2Â months","timestamp":1625998466,"status_display":"Accepted","runtime":"148 ms","url":"/submissions/detail/520736619/","is_pending":"Not Pending","title":"Number of Subsequences That Satisfy the Given Sum Condition","memory":"47.7 MB","code":"#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx,avx2,fma\")\nstatic auto _ = []() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n  return 0;\n}();\n\nclass Solution {\npublic:\n  long long int cal(long long int N,long long int power,long long int MOD){\n      if(N==0 || N==1) return N%MOD;\n\n      if(power==0) return 1;\n\n      if(MOD==1) return 0;\n\n      long long int ans=1;\n\n        while(power){\n            if(power%2){\n               ans=(ans*N)%MOD;\n            }\n            N=(N*N)%MOD;\n            power/=2;\n        }\n    return ans;\n  }\n    \n    int numSubseq(vector<int>& nums, int target) {\n        long long int ans=0;\n        long long mod=1000000007;\n        sort(nums.begin(),nums.end());\n        for(int i=0;i<nums.size();i++)\n        {\n            if(2*nums[i]>target)break;\n            else\n            {\n                int l=i,r=nums.size()-1;\n                int j=i;\n                while(l<=r)\n                {\n                    int m=l+(r-l)/2;\n                    if(nums[m]+nums[i]>target)\n                    {\n                        r=m-1;\n                    }\n                    else\n                    {\n                        j=m;\n                        l=m+1;\n                    }\n                }\n                if(nums[i]*2<=target)\n                ans+=cal(2,j-i,mod);\n                else\n                ans+=cal(2,(j-i),mod)-1;\n            }\n        }\n        return ans%mod;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111","title_slug":"number-of-subsequences-that-satisfy-the-given-sum-condition"}