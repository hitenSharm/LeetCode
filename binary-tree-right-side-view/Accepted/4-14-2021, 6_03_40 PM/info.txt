{"id":480536282,"lang":"cpp","time":"5Â months","timestamp":1618403620,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/480536282/","is_pending":"Not Pending","title":"Binary Tree Right Side View","memory":"13.4 MB","code":"#pragma GCC optimize(\"Ofast\")  \n#pragma GCC target(\"avx,avx2,fma\") \nstatic auto _ = [] ()\n{ios_base::sync_with_stdio(false);cin.tie(nullptr);cout.tie(nullptr);return 0;}();\n\nclass Solution {\npublic:\n    \n    map<int,vector<int>>mp;\n    \n    void lvl(TreeNode* root,int d)\n    {\n        if(!root)\n        return ;\n        mp[d].push_back(root->val);\n        \n        lvl(root->left,d+1);\n        lvl(root->right,d+1);\n    }\n    \n    vector<int> rightSideView(TreeNode* root) {\n        if(!root)\n            return vector<int>();\n        lvl(root,0);\n        vector<int>ans;\n        for(auto it : mp)\n        {\n            int temp=it.second[it.second.size()-1];\n            ans.push_back(temp);\n        }\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-right-side-view"}