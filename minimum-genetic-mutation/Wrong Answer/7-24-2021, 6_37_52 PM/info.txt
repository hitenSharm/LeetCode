{"id":527512002,"lang":"cpp","time":"1 month, 2 weeks","timestamp":1627132072,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/527512002/","is_pending":"Not Pending","title":"Minimum Genetic Mutation","memory":"N/A","code":"#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx,avx2,fma\")\nstatic auto _ = []() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n  return 0;\n}();\n\nclass Solution {\npublic:\n    int minMutation(string start, string end, vector<string>& bank) {\n        unordered_set<string>valids;\n        \n        for(int i=0;i<bank.size();i++)\n        valids.insert(bank[i]);\n        \n        queue<pair<string,int>>q;\n        for(int i=0;i<start.length();i++)\n        {\n            if(start[i]!=end[i])q.push({start,i});\n        }\n        int changes=0;\n        while(!q.empty())\n        {\n            int len=q.size();\n            for(int k=0;k<len;k++)\n            {\n                pair<string,int>temp=q.front();\n                q.pop();\n                temp.first[temp.second]=end[temp.second];\n                if(valids.find(temp.first)==valids.end())continue;\n                if(temp.first==end)return changes+1;\n                for(int i=0;i<start.length();i++)\n                {\n                    if(temp.first[i]!=end[i])q.push({temp.first,i});\n                }\n            }\n            changes++;\n        }\n        return -1;\n    }\n};","compare_result":"11111111000111","title_slug":"minimum-genetic-mutation"}