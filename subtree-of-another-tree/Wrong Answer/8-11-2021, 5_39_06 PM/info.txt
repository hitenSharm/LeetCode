{"id":536804945,"lang":"cpp","time":"1Â month","timestamp":1628683746,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/536804945/","is_pending":"Not Pending","title":"Subtree of Another Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    void inorder(TreeNode* root,string& s)\n    {\n        if(!root)return ;\n        inorder(root->left,s);\n        s.push_back(root->val);\n        inorder(root->right,s);\n    }\n\n    bool isSubtree(TreeNode* root, TreeNode* subRoot) {\n        string s1=\"\";\n        inorder(root,s1);\n        string s2=\"\";\n        inorder(subRoot,s2);\n        if(s1.find(s2)!=string::npos)\n        {\n            return true;\n        }\n        return false;\n    }\n};","compare_result":"11111111011111000111111100010101111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111100111101111001111110111011111","title_slug":"subtree-of-another-tree"}