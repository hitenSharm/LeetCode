{"id":536799425,"lang":"cpp","time":"1Â month","timestamp":1628682703,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/536799425/","is_pending":"Not Pending","title":"Subtree of Another Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    bool inorder(TreeNode* root,TreeNode* subRoot,TreeNode* ogsub)\n    {\n        if(!root and !subRoot)return true;\n        if(!root || !subRoot)return false;\n        if(root->val==subRoot->val)\n        {\n            return (inorder(root->left,subRoot->left,ogsub) and inorder(root->right,subRoot->right,ogsub));\n        }\n        return (inorder(root->left,ogsub,ogsub) || inorder(root->right,ogsub,ogsub));\n    }\n\n    bool isSubtree(TreeNode* root, TreeNode* subRoot) {\n        return inorder(root,subRoot,subRoot);\n    }\n};","compare_result":"11111001111001111111111111111111101010011010001001100111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"subtree-of-another-tree"}