{"id":497093877,"lang":"cpp","time":"3 months, 3 weeks","timestamp":1621766001,"status_display":"Accepted","runtime":"80 ms","url":"/submissions/detail/497093877/","is_pending":"Not Pending","title":"Count Number of Nice Subarrays","memory":"67.8 MB","code":"#pragma GCC optimize(\"Ofast\")  \n#pragma GCC target(\"avx,avx2,fma\") \nstatic auto _ = [] ()\n{ios_base::sync_with_stdio(false);cin.tie(nullptr);cout.tie(nullptr);return 0;}();\n\nclass Solution {\npublic:\n\tint atMostKodd(vector<int>&nums,int k)\n\t{\n\t\tint i=0;int j=0;int n=nums.size();\n        int odds=0;\n        int arrs=0;\n        while(i<n && j<n)\n        {\n        \tif(!((nums[j] | 1) > nums[j]))\n        \t\todds++;\n        \twhile(odds>k)\n        \t{\n        \t\tif(!((nums[i] | 1) > nums[i]))\n        \t\t\todds--;\n        \t\ti++;\n        \t}\n        \tarrs=arrs+j-i+1;\n            j++;\n        }\n        return arrs;\n\t}\n    int numberOfSubarrays(vector<int>& nums, int k) {\n    \treturn abs(atMostKodd(nums,k)-atMostKodd(nums,k-1));\n    }\n};","compare_result":"11111111111111111111111111111111111111","title_slug":"count-number-of-nice-subarrays"}