{"id":537727040,"lang":"cpp","time":"1Â month","timestamp":1628831625,"status_display":"Accepted","runtime":"44 ms","url":"/submissions/detail/537727040/","is_pending":"Not Pending","title":"Deepest Leaves Sum","memory":"38.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int deepestLeavesSum(TreeNode* root) {\n        queue<TreeNode*>q;\n        int ans;\n        if(!root)return 0;\n        q.push(root);\n        while(!q.empty())\n        {\n            int temp=0;\n            int len=q.size();\n            for(int i=0;i<len;i++)\n            {\n                temp+=q.front()->val;\n                if(q.front()->left)q.push(q.front()->left);\n                if(q.front()->right)q.push(q.front()->right);\n                q.pop();                \n            }\n            ans=temp;\n        }\n        return ans;\n    }\n};","compare_result":"111111111111111","title_slug":"deepest-leaves-sum"}