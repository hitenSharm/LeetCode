{"id":537727249,"lang":"cpp","time":"1Â month","timestamp":1628831650,"status_display":"Accepted","runtime":"50 ms","url":"/submissions/detail/537727249/","is_pending":"Not Pending","title":"Deepest Leaves Sum","memory":"38.8 MB","code":"#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx,avx2,fma\")\nstatic auto _ = []() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n  return 0;\n}();\n\nclass Solution {\npublic:\n    int deepestLeavesSum(TreeNode* root) {\n        if(!root)return 0;\n        queue<TreeNode*>q;\n        int ans;        \n        q.push(root);\n        while(!q.empty())\n        {\n            int temp=0;\n            int len=q.size();\n            for(int i=0;i<len;i++)\n            {\n                temp+=q.front()->val;\n                if(q.front()->left)q.push(q.front()->left);\n                if(q.front()->right)q.push(q.front()->right);\n                q.pop();                \n            }\n            ans=temp;\n        }\n        return ans;\n    }\n};","compare_result":"111111111111111","title_slug":"deepest-leaves-sum"}