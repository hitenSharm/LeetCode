{"id":544545026,"lang":"cpp","time":"2 weeks, 3 days","timestamp":1629980992,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/544545026/","is_pending":"Not Pending","title":"Intersection of Two Linked Lists","memory":"14.7 MB","code":"#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx,avx2,fma\")\nstatic auto _ = []() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n  return 0;\n}();\nclass Solution {\npublic:\n    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {\n        ListNode* temp=headA;\n        int cntA=0;\n        while(temp)\n        {\n            cntA++;\n            temp=temp->next;\n        }\n        int cntB=0;\n        temp=headB;\n        while(temp)\n        {\n            cntB++;\n            temp=temp->next;\n        }\n        while(cntB!=cntA)\n        {\n            if(cntA>cntB)\n            {\n                headA=headA->next;\n                cntA--;\n            }\n            if(cntB>cntA)\n            {\n                headB=headB->next;\n                cntB--;\n            }\n        }\n        while(headB!=nullptr and headA!=nullptr)\n        {\n            if(headA==headB)return headA;\n            headA=headA->next;\n            headB=headB->next;\n        }\n        return nullptr;\n    }\n};","compare_result":"111111111111111111111111111111111111111","title_slug":"intersection-of-two-linked-lists"}