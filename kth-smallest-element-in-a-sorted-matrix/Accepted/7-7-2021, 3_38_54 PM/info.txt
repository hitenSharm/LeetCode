{"id":518713629,"lang":"cpp","time":"2 months, 1 week","timestamp":1625652534,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/518713629/","is_pending":"Not Pending","title":"Kth Smallest Element in a Sorted Matrix","memory":"13.7 MB","code":"#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx,avx2,fma\")\nstatic auto _ = []() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n  return 0;\n}();\n\nclass Solution {\npublic:\n    int kthSmallest(vector<vector<int>>& matrix, int k) {\n        int cnt=0;\n        int n=matrix.size();\n        priority_queue <pair<int,pair<int,int>>, vector<pair<int,pair<int,int>>>, greater<pair<int,pair<int,int>>> > pq;\n        pq.push({matrix[0][0],{0,0}});\n        int vis[301][301];        \n        memset(vis,0,sizeof(vis));        \n        int ans;\n        while(cnt<k)\n        {\n                pair<int,int>temp=pq.top().second;\n                ans=pq.top().first;    \n                pq.pop(); \n                //cout<<ans<<endl;\n                cnt++;\n                if(cnt==k)break;\n                if(temp.first+1<n and vis[temp.first+1][temp.second]==0)\n                {                    \n                    pq.push({matrix[temp.first+1][temp.second],{temp.first+1,temp.second}});\n                    vis[temp.first+1][temp.second]=1;\n                }\n                if(temp.second+1<n and vis[temp.first][temp.second+1]==0)\n                {                    \n                    pq.push({matrix[temp.first][temp.second+1],{temp.first,temp.second+1}});\n                    vis[temp.first][temp.second+1]=1;\n                }\n        }        \n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"kth-smallest-element-in-a-sorted-matrix"}