{"id":535087572,"lang":"cpp","time":"1Â month","timestamp":1628401414,"status_display":"Accepted","runtime":"228 ms","url":"/submissions/detail/535087572/","is_pending":"Not Pending","title":"Minimum Depth of Binary Tree","memory":"144.6 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int ans=INT_MAX;\n    void dfs(TreeNode* root,int depth)\n    {\n        if(!root)return ;\n        if(!root->left and !root->right)\n        {\n            ans=min(ans,depth);\n            return ;\n        }\n        dfs(root->left,depth+1);\n        dfs(root->right,depth+1);\n    }\n    int minDepth(TreeNode* root) {\n        dfs(root,1);\n        if(ans==INT_MAX)ans=0;\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"minimum-depth-of-binary-tree"}