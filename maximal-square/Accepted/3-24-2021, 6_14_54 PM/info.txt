{"id":471854333,"lang":"cpp","time":"5 months, 3 weeks","timestamp":1616589894,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/471854333/","is_pending":"Not Pending","title":"Maximal Square","memory":"11.8 MB","code":"class Solution {\npublic:\n\n    int fillDpArray(vector<vector<char>>& matrix,vector<vector<int>>& dp,int i,int j)\n    {\n        if(i>=matrix.size()||j>=matrix[0].size())\n        return 0;\n\n        if(dp[i][j]!=-1)\n        return dp[i][j];\n\n        if(matrix[i][j]=='1')\n        {\n            return dp[i][j]=1+min(min(fillDpArray(matrix,dp,i+1,j),fillDpArray(matrix,dp,i,j+1)),fillDpArray(matrix,dp,i+1,j+1));\n        }\n        if(matrix[i][j]=='0')\n        return dp[i][j]=0;\n\n        return 0;\n    }\n\n    int maximalSquare(vector<vector<char>>& matrix) {\n        vector<int>row(matrix[0].size(),-1);\n        vector<vector<int>>dp(matrix.size(),row);\n        int maxi=0;\n        for(int i=0;i<matrix.size();i++)\n        {\n            for(int j=0;j<matrix[0].size();j++)\n            {\n                maxi=max(maxi,fillDpArray(matrix,dp,i,j));\n            }\n        }        \n        return maxi*maxi;        \n        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximal-square"}