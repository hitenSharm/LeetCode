{"id":508699006,"lang":"cpp","time":"2 months, 4 weeks","timestamp":1623834088,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/508699006/","is_pending":"Not Pending","title":"Generate Parentheses","memory":"37 MB","code":"#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx,avx2,fma\")\nstatic auto _ = []() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n  return 0;\n}();\n\nclass Solution {\npublic:\n\n    void recu(vector<string>&ans,int n,string temp,stack<char>curr)\n    {        \n        if(n==0 and curr.top()=='@')\n        {\n            ans.push_back(temp);\n            return ;\n        }\n        if(n<0)\n        return ;\n        \n        if(curr.top()=='(')\n        {\n            temp=temp+')';\n            curr.pop();\n            recu(ans,n,temp,curr);\n            temp.pop_back();\n            curr.push('(');\n        }\n        \n        temp=temp+'(';\n        curr.push('(');\n        recu(ans,n-1,temp,curr);\n        temp.pop_back();\n        curr.pop();\n    }\n    \n    vector<string> generateParenthesis(int n) {\n        stack<char>curr;\n        curr.push('@');\n        string temp=\"\";\n        vector<string>ans;\n        recu(ans,n,temp,curr);\n        return ans;\n    }\n};","compare_result":"11111111","title_slug":"generate-parentheses"}