{"id":455523381,"lang":"cpp","time":"7Â months","timestamp":1613225290,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/455523381/","is_pending":"Not Pending","title":"Generate Parentheses","memory":"18.5 MB","code":"class Solution {\npublic:\n\n    bool backTrack(vector<string>&ans , string temp, int n, int open,int close,int cnt){\n        \n        if(temp.length()>=2*n)\n        {\n            if(cnt==0 )\n            {\n                ans.push_back(temp);\n                return true;\n            }\n            return false;\n        }\n        \n        if(open<=n)\n        {\n            cnt++;\n            temp=temp+'(';\n            backTrack(ans,temp,n,open+1,close,cnt);\n            cnt--;\n            temp.pop_back();\n            \n        }\n        if(cnt>0 && close<=n)\n        {\n            cnt--;\n            temp=temp+')';\n            backTrack(ans,temp,n,open,close+1,cnt);\n            cnt++;\n            temp.pop_back();\n        }\n        return false;\n    }\n\n    vector<string> generateParenthesis(int n) {\n        vector<string>ans;\n        string temp;\n        int open=0;\n        int close=0;\n        int cnt=0;\n        backTrack(ans,temp,n,open,close,cnt);\n        return ans;\n    }\n};","compare_result":"11111111","title_slug":"generate-parentheses"}