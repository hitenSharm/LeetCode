{"id":519312725,"lang":"cpp","time":"2Â months","timestamp":1625754658,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/519312725/","is_pending":"Not Pending","title":"Sum of Mutated Array Closest to Target","memory":"N/A","code":"#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx,avx2,fma\")\nstatic auto _ = []() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n  return 0;\n}();\n\nclass Solution {\npublic:\n\n    int findSum(vector<int>& arr,int m)\n    {\n        int ans=0;\n        for(int i=0;i<arr.size();i++)\n        {\n            if(arr[i]>m)\n            ans+=m;\n            else\n            ans+=arr[i];\n        }\n        return ans;\n    }\n\n    int findBestValue(vector<int>& arr, int target) {\n        int l=1,r=100000;\n        int value=INT_MAX;int sumClosest=findSum(arr,INT_MAX);\n        while(l<=r)\n        {\n            int m=l+(r-l)/2;\n            int tempSum=findSum(arr,m);\n            if(tempSum==target)\n            {\n                value=min(value,m);\n                sumClosest=target;\n                r=m-1;\n                continue;\n            }\n            if(tempSum>target)\n            {\n                r=m-1;\n                if((abs(tempSum-target)<abs(sumClosest-target)) || (abs(tempSum-target)==abs(sumClosest-target) and m<value))\n                {\n                    value=m;\n                    sumClosest=tempSum;\n                }\n                continue;\n            }\n            else\n            {\n                l=m+1;\n                if((abs(tempSum-target)<abs(sumClosest-target)) || (abs(tempSum-target)==abs(sumClosest-target) and m<value))\n                {\n                    value=m;\n                    sumClosest=tempSum;\n                }\n            }\n        }\n        return value;\n    }\n};","compare_result":"11111010101111011111","title_slug":"sum-of-mutated-array-closest-to-target"}