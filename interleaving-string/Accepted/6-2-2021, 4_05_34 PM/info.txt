{"id":501829898,"lang":"cpp","time":"3 months, 1 week","timestamp":1622630134,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/501829898/","is_pending":"Not Pending","title":"Interleaving String","memory":"6.2 MB","code":"#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx,avx2,fma\")\nstatic auto _ = []() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n  return 0;\n}();\n\nclass Solution {\npublic:\n\n    int dp[101][101];\n\n    int recu(string& s1,string& s2,string& s3,int i,int j,int k)\n    {      \n      if(i>s1.length() || j>s2.length() || k>s3.length())\n        return 0;        \n      if(i==s1.length() && j==s2.length() && k==s3.length())\n        return 1;\n      if(dp[i][j]!=-1)\n      {          \n              return dp[i][j];\n      }\n      if(s1[i]==s3[k] && s2[j]==s3[k])\n      {          \n          return dp[i][j]=max(recu(s1,s2,s3,i+1,j,k+1),recu(s1,s2,s3,i,j+1,k+1));\n      }\n      if(s1[i]==s3[k] && s2[j]!=s3[k])\n      {          \n          return dp[i][j]=recu(s1,s2,s3,i+1,j,k+1);\n      }\n      if(s2[j]==s3[k] && s1[i]!=s3[k])\n      {          \n          return dp[i][j]=recu(s1,s2,s3,i,j+1,k+1);\n      }\n      else\n          return 0;\n      return -1;\n    }\n\n    bool isInterleave(string s1, string s2, string s3) {\n        memset(dp,-1,sizeof(dp));\n        int ans=recu(s1,s2,s3,0,0,0);\n        if(ans==0)\n          return false;\n        return true;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"interleaving-string"}