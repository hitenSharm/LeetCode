{"id":521314452,"lang":"cpp","time":"2Â months","timestamp":1626095221,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/521314452/","is_pending":"Not Pending","title":"Isomorphic Strings","memory":"N/A","code":"#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx,avx2,fma\")\nstatic auto _ = []() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n  return 0;\n}();\n\nclass Solution {\npublic:\n    bool isIsomorphic(string s, string t) {\n        int freq1[26]={0};\n        int freq2[26]={0};\n        \n        if(s.length()!=t.length())return false;\n        \n        for(int i=0;i<s.length();i++)\n        {\n            freq1[s[i]-'a']++;\n            freq2[t[i]-'a']++;\n        }\n        unordered_map<int,int>ump1;\n        unordered_map<int,int>ump2;\n        for(int i=0;i<26;i++)\n        {\n            if(freq2[i]>0)\n            ump2[freq2[i]]++;\n            if(freq1[i]>0)\n            ump1[freq1[i]]++;\n        }\n        if(ump1.size()!=ump2.size())return false;\n        for(auto it:ump1)\n        {\n            if(ump2.find(it.first)==ump2.end() || it.second!=ump2[it.first])\n            return false;\n        }\n        return true;\n    }\n};","compare_result":"111111111001111100111111011110000000000","title_slug":"isomorphic-strings"}