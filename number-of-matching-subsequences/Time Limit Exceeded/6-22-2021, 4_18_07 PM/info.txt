{"id":511544748,"lang":"cpp","time":"2 months, 3 weeks","timestamp":1624358887,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/511544748/","is_pending":"Not Pending","title":"Number of Matching Subsequences","memory":"N/A","code":"#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx,avx2,fma\")\nstatic auto _ = []() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n  return 0;\n}();\n\nclass Solution {\npublic:\n\n    int numMatchingSubseq(string s, vector<string>& words) {\n        unordered_map<char,vector<int>>orig;    \n        for(int i=0;i<s.length();i++)\n        {\n            orig[s[i]].push_back(i);\n        }\n        int ans=0;\n        \n        for(int i=0;i<words.size();i++)\n        {\n            string temp=words[i];\n            int mini=s.size()+1;\n            int len=temp.length();\n            unordered_set<int>vis;            \n            for(int j=0;j<temp.length();j++)\n            {\n                if(orig.find(temp[j])==orig.end())\n                break;\n                vector<int>curr=orig[temp[j]];\n                for(int k=0;k<curr.size();k++)\n                {\n                    if(vis.find(curr[k])!=vis.end())continue;\n                    if(mini!=s.size()+1 and curr[k]<mini)continue;\n                    else\n                    {                           \n                        vis.insert(curr[k]);\n                        len--;\n                        mini=curr[k];\n                        break;\n                    }\n                }\n            }            \n            if(len==0){            \n            ans++;            \n            }\n        }\n        return ans;\n        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111000000000","title_slug":"number-of-matching-subsequences"}