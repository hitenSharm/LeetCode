{"id":511584020,"lang":"cpp","time":"2 months, 3 weeks","timestamp":1624367039,"status_display":"Accepted","runtime":"184 ms","url":"/submissions/detail/511584020/","is_pending":"Not Pending","title":"Number of Matching Subsequences","memory":"50 MB","code":"#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx,avx2,fma\")\nstatic auto _ = []() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n  return 0;\n}();\n\nclass Solution {\npublic:\n\n    int numMatchingSubseq(string s, vector<string>& words) {\n        unordered_map<char,vector<int>>orig;    \n        for(int i=0;i<s.length();i++)\n        {\n            orig[s[i]].push_back(i);\n        }\n        int ans=0;\n        \n        for(int i=0;i<words.size();i++)\n        {\n            string temp=words[i];\n            int mini=-1;\n            bool found=true;\n            for(int j=0;j<temp.length();j++)\n            {\n                if(orig.find(temp[j])==orig.end())\n                {\n                    found=false;\n                    break;\n                }\n                vector<int>& curr=orig[temp[j]];\n                auto it=upper_bound(curr.begin(),curr.end(),mini);\n                if(it==curr.end())\n                {\n                    found=false;\n                    break;\n                }\n                else\n                {\n                    mini=*it;                    \n                }\n            }            \n            ans+=found;\n        }\n        return ans;\n        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"number-of-matching-subsequences"}