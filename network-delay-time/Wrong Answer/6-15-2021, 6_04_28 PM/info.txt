{"id":508264619,"lang":"cpp","time":"2 months, 4 weeks","timestamp":1623760468,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/508264619/","is_pending":"Not Pending","title":"Network Delay Time","memory":"N/A","code":"#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx,avx2,fma\")\nstatic auto _ = []() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n  return 0;\n}();\n\nclass Solution {\npublic:\n    int networkDelayTime(vector<vector<int>>& times, int n, int k) {\n        priority_queue<pair<int,int>, vector<pair<int,int>>, greater<pair<int,int>>> q;\n        unordered_map<int,vector<vector<int>>>adjList;\n        \n        for(int i=0;i<times.size();i++)\n        {\n            adjList[times[i][0]].push_back({times[i][1],times[i][2]});    \n        }\n        int dist[101];\n        int vis[101];\n        q.push({0,k});\n        for(int i=1;i<=n;i++)\n        {\n            dist[i]=INT_MAX;\n            vis[i]=0;\n        }\n        dist[k]=0;\n        while(!q.empty())\n        {\n            int index=q.top().second;\n            q.pop();\n            if(vis[index]==1)continue;\n            vis[index]=1;\n            vector<vector<int>>candids=adjList[index];\n            for(int i=0;i<candids.size();i++)\n            {\n                int newIndex=candids[i][0],newDist=candids[i][1];\n                if(dist[newIndex] > dist[index] + newDist)\n                {\n                    dist[newIndex]=dist[index] + newDist;\n                    q.push({newDist,newIndex});\n                }\n            }\n        }\n        int maxi=0;\n        for(int i=1;i<=n;i++)\n        {\n            if(dist[i]==INT_MAX)\n            return -1;\n            else\n            maxi=max(maxi,dist[i]);\n        }\n        return maxi;\n        \n    }\n};","compare_result":"1111111111111111111111111111110011110111100110110011","title_slug":"network-delay-time"}