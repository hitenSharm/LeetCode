{"id":501732345,"lang":"cpp","time":"3 months, 1 week","timestamp":1622613951,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/501732345/","is_pending":"Not Pending","title":"Construct K Palindrome Strings","memory":"N/A","code":"#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx,avx2,fma\")\nstatic auto _ = []() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n  return 0;\n}();\n\nclass Solution {\npublic:\n    bool canConstruct(string s, int k) {\n        unordered_map<char,int>ump;\n        for(char i:s)\n        {\n          ump[i]++;\n        }\n        int ev=0;int od=0;\n        for(auto it:ump)\n        { \n          int temp=it.second;\n          if((temp | 1) > temp)\n            ev++;\n          else\n          {\n              if(temp>1)\n              ev=ev+temp/2;\n                 od++;\n          }\n        }\n        int maxi;int mini;\n        if(ev==0)\n        {\n          maxi=od;\n          mini=od;\n        }\n        else if(od==0)\n        {\n          maxi=ev;\n          mini=1;\n        }\n        else if(od!=0 && ev!=0)\n        {\n          maxi=od+ev;\n          if(od>=ev)\n            mini=max(od,ev);\n          else\n          {\n            mini=min(ev,od)+1;\n          }\n        }\n        if(k<=maxi and k>=mini)\n          return true;\n        return false;\n    }\n};","compare_result":"111111011111011100101101100010000001000100000001000000100100000000100110110000010101111111111000100000010001","title_slug":"construct-k-palindrome-strings"}