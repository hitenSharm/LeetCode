{"id":501737776,"lang":"cpp","time":"3 months, 1 week","timestamp":1622614704,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/501737776/","is_pending":"Not Pending","title":"Construct K Palindrome Strings","memory":"12.2 MB","code":"#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx,avx2,fma\")\nstatic auto _ = []() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n  return 0;\n}();\n\nclass Solution {\npublic:\n    bool canConstruct(string s, int k) {\n        int n=s.length();        \n        if(n==k)\n            return true;\n        unordered_map<char,int>ump;\n        for(char i:s)\n        {\n          ump[i]++;\n        }\n        int ev=0;int od=0;\n        for(auto it:ump)\n        { \n           \n          int temp=it.second;           \n          if((temp | 1) > temp)\n            ev++;\n          else\n          {\n            if(temp>1)\n              ev=ev+temp/2;\n            od++;\n          }\n        }        \n        int maxi=n;\n        int mini;\n        if(ev==0)\n        {          \n          mini=od;\n        }\n        else if(od==0)\n        {          \n          mini=1;\n        }\n        else if(od!=0 && ev!=0)\n        {          \n          if(od>=ev)\n            mini=max(od,ev);\n          else\n          {\n            mini=min(ev,od);\n          }\n        }\n        if(k<=maxi and k>=mini)\n          return true;\n        return false;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"construct-k-palindrome-strings"}