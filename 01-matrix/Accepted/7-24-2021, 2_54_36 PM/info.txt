{"id":527445388,"lang":"cpp","time":"1 month, 2 weeks","timestamp":1627118676,"status_display":"Accepted","runtime":"72 ms","url":"/submissions/detail/527445388/","is_pending":"Not Pending","title":"01 Matrix","memory":"31.4 MB","code":"#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx,avx2,fma\")\nstatic auto _ = []() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n  return 0;\n}();\n\nclass Solution {\npublic:\n\n    vector<vector<int>>dp;\n    \n    bool isSafe(vector<vector<int>>& matrix,int x,int y)\n    {\n        if(x>=0 and y>=0 and x<matrix.size() and y<matrix[0].size())\n        return true;\n        \n        return false;\n    }\n    \n    vector<vector<int>> updateMatrix(vector<vector<int>>& mat) {    \n        queue<pair<int,int>>q;        \n        dp.resize(mat.size(),vector<int>(mat[0].size(),INT_MAX));\n        for(int i=0;i<mat.size();i++)\n        {            \n            for(int j=0;j<mat[i].size();j++)\n            {\n                if(mat[i][j]==0)\n                {\n                    dp[i][j]=0;\n                    q.push({i,j});\n                }\n            }            \n        }\n        \n        while(!q.empty())\n        {\n            pair<int,int>temp=q.front();\n            q.pop();\n            int x=temp.first,y=temp.second;\n            if(isSafe(mat,x+1,y) and dp[x+1][y]>dp[x][y]+1)\n            {\n                dp[x+1][y]=dp[x][y]+1;\n                q.push({x+1,y});\n            }\n            if(isSafe(mat,x-1,y) and dp[x-1][y]>dp[x][y]+1)\n            {\n                dp[x-1][y]=dp[x][y]+1;\n                q.push({x-1,y});\n            }\n            if(isSafe(mat,x,y+1) and dp[x][y+1]>dp[x][y]+1)\n            {\n                dp[x][y+1]=dp[x][y]+1;\n                q.push({x,y+1});\n            }\n            if(isSafe(mat,x,y-1) and dp[x][y-1]>dp[x][y]+1)\n            {\n                dp[x][y-1]=dp[x][y]+1;\n                q.push({x,y-1});\n            }\n        }\n        \n        return dp;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111","title_slug":"01-matrix"}