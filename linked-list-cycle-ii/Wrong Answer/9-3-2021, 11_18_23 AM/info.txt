{"id":548737853,"lang":"cpp","time":"1 week, 2 days","timestamp":1630648103,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/548737853/","is_pending":"Not Pending","title":"Linked List Cycle II","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode *detectCycle(ListNode *head) {\n        if(!head || !head->next)return nullptr;\n        ListNode* slow=head;\n        ListNode* fast=head;\n        while(!slow and !fast->next->next)\n        {\n            slow=slow->next;\n            fast=fast->next->next;\n            if(slow==fast)\n            {                \n                ListNode* ans=head;\n                while(ans!=slow)\n                {\n                    ans=ans->next;\n                    slow=slow->next;\n                }\n                return ans;\n            }            \n        }\n        return nullptr;\n    }\n};","compare_result":"0011010001000100","title_slug":"linked-list-cycle-ii"}