{"id":478818370,"lang":"cpp","time":"5Â months","timestamp":1618047859,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/478818370/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"N/A","code":"class Solution {\npublic:\n    \n    void makeTaverse(TreeNode* root,string &s)\n    {\n        if(!root)\n        return ;\n        \n        makeTaverse(root->left,s);\n        \n        int data=root->val;\n        s+=to_string(data);\n        \n        makeTaverse(root->right,s);\n    }\n\n    bool isSymmetric(TreeNode* root) {\n        string s=\"\";\n        makeTaverse(root,s);\n        \n        for(int i=0;i<s.length()/2;i++){\n            if(s[i]!=s[s.length()-1-i])\n            return false;\n        }\n        \n        return true;\n    }\n};","compare_result":"11011111101111111111011111111111011001111011110111111111101101111011000110110001111111101001111011110010110110111101101011110001001110010111101000011100110101100011000100111110011110011001101111","title_slug":"symmetric-tree"}