{"id":478862449,"lang":"cpp","time":"5Â months","timestamp":1618059645,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/478862449/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"16.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    bool chk(TreeNode* l,TreeNode* r)\n    {\n        if(!l || !r)\n        return l==r;\n        \n        if(l->val!=r->val)\n        return false;\n        \n        return (chk(l->left,r->right) && chk(l->right,r->left));\n        \n    }\n    \n    bool isSymmetric(TreeNode* root) {\n        if(!root)\n        return true;\n        \n        return chk(root->left,root->right);\n        \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"symmetric-tree"}