{"id":548746956,"lang":"cpp","time":"1 week, 2 days","timestamp":1630649371,"status_display":"Accepted","runtime":"9 ms","url":"/submissions/detail/548746956/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"16.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n\n    bool traverse(TreeNode* r1,TreeNode* r2)\n    {        \n        if(!r1 and !r2)return true;\n        if(!r1 || !r2)return false;\n        if(r1->val!=r2->val)return false;\n        bool ans=true;\n        ans=ans&traverse(r1->left,r2->right);\n        ans=ans&traverse(r1->right,r2->left);\n        return ans;\n    }\n\n    bool isSymmetric(TreeNode* root) {\n        if(!root)return true;\n        return traverse(root->left,root->right);\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"symmetric-tree"}