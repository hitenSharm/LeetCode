{"id":503361578,"lang":"cpp","time":"3 months, 1 week","timestamp":1622899268,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/503361578/","is_pending":"Not Pending","title":"Minimum Deletions to Make String Balanced","memory":"N/A","code":"#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx,avx2,fma\")\nstatic auto _ = []() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n  return 0;\n}();\n\nclass Solution {\npublic:\n    int minimumDeletions(string s) {\n        int index=0;int fl=0;\n        int bCnt=0, aCnt=0;\n        int ans=0;\n        for(;index<s.length();)\n        {\n          if(s[index]=='a' and fl==0)\n            index++;\n          else\n          {\n            fl=1;\n            while(s[index]=='b' and index<s.length())\n            {\n              bCnt++;index++;\n            }\n            while(s[index]=='a' and index<s.length())\n            {\n              aCnt++;index++;\n            }\n            if(bCnt==aCnt)\n            {\n              ans+=bCnt;\n              bCnt=0;\n              aCnt=0;\n            }\n            else if(bCnt>aCnt and aCnt!=0)\n            {\n              ans+=aCnt;\n              aCnt=0;\n            }\n            else if(aCnt>bCnt)\n            {\n              ans+=bCnt;\n              bCnt=0;aCnt=0;\n            }\n          }\n        }\n        return ans;\n    }\n};","compare_result":"1111110010110101010000000000000000010000000000001000000001000000000100000000000000000001000000000000001000000000000000000000000000000000000000000100000000000","title_slug":"minimum-deletions-to-make-string-balanced"}