{"id":535083233,"lang":"cpp","time":"1Â month","timestamp":1628400756,"status_display":"Accepted","runtime":"44 ms","url":"/submissions/detail/535083233/","is_pending":"Not Pending","title":"Design Add and Search Words Data Structure","memory":"30.4 MB","code":"#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx,avx2,fma\")\nstatic auto _ = []() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n  return 0;\n}();\n\nclass WordDictionary {\npublic:\n    WordDictionary() {\n    }\n    unordered_map<int,vector<string>>ump;\n    void addWord(string word) {\n       ump[word.size()].push_back(word);\n    }\n    \n    bool search(string word) {\n        if(ump.find(word.size())==ump.end())return false;\n        vector<string>& candids=ump[word.size()];\n        for(int i=0;i<candids.size();i++)\n        {\n            if(word==candids[i])return true;\n            else\n            {\n                int fl=0;\n                for(int j=0;j<word.size();j++)\n                {\n                    if(word[j]=='.')continue;\n                    if(word[j]!=candids[i][j])\n                    {\n                        fl=1;\n                        break;\n                    }\n                }\n                if(fl==0)return true;\n            }\n        }\n        return false;\n    }\n};\n","compare_result":"1111111111111","title_slug":"design-add-and-search-words-data-structure"}