{"id":501205163,"lang":"cpp","time":"3 months, 2 weeks","timestamp":1622525877,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/501205163/","is_pending":"Not Pending","title":"Maximize Sum Of Array After K Negations","memory":"9.2 MB","code":"#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx,avx2,fma\")\nstatic auto _ = []() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n  return 0;\n}();\n\nclass Solution {\npublic:\n    int largestSumAfterKNegations(vector<int>& nums, int k) {\n        sort(nums.begin(),nums.end());\n        int mini=nums[nums.size()-1];\n        for(int i=0;i<nums.size();i++)\n        {\n          if(k>0 && nums[i]<0)\n          {\n            k--;\n            nums[i]=-nums[i];            \n          }\n          mini=min(mini,nums[i]);\n        }\n        if(k%2==0 || k==0)\n        {\n          return accumulate(nums.begin(),nums.end(),0);\n        }\n        else\n        {\n          int ans=accumulate(nums.begin(),nums.end(),0);\n          ans=ans-(mini*2);\n          return ans;\n        }\n    }\n};\n\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximize-sum-of-array-after-k-negations"}