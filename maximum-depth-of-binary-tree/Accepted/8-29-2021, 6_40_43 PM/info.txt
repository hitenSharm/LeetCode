{"id":546116468,"lang":"cpp","time":"2Â weeks","timestamp":1630242643,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/546116468/","is_pending":"Not Pending","title":"Maximum Depth of Binary Tree","memory":"18.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int maxi=1;\n    void recu(TreeNode* root,int d)\n    {\n        if(!root)\n        {\n            maxi=max(maxi,d);\n            return ;            \n        }\n        recu(root->left,d+1);\n        recu(root->right,d+1);\n    }\n    int maxDepth(TreeNode* root) {\n        recu(root,0);\n        if(!root)maxi=0;\n        return maxi;\n    }\n};","compare_result":"111111111111111111111111111111111111111","title_slug":"maximum-depth-of-binary-tree"}