{"id":512545003,"lang":"cpp","time":"2 months, 2 weeks","timestamp":1624538997,"status_display":"Accepted","runtime":"64 ms","url":"/submissions/detail/512545003/","is_pending":"Not Pending","title":"Distant Barcodes","memory":"40.6 MB","code":"#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx,avx2,fma\")\nstatic auto _ = []() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n  return 0;\n}();\n\nclass Solution {\npublic:\n    vector<int> rearrangeBarcodes(vector<int>& barcodes) {\n        unordered_map<int, int>ump;\n        int freqMax=INT_MIN;\n        int valFreqMax=0;\n        \n        for(int i=0;i<barcodes.size();i++)\n        {\n            ump[barcodes[i]]++;\n            if(ump[barcodes[i]]>freqMax)\n            {\n                freqMax=ump[barcodes[i]];\n                valFreqMax=barcodes[i];\n            }\n        }\n        int curr=0;\n        while(freqMax>0 and curr<barcodes.size())\n        {\n            barcodes[curr]=valFreqMax;\n            freqMax--;\n            curr=curr+2;\n        }\n        \n        int fl=0;\n        if(curr>=barcodes.size())fl=1;\n        \n        ump.erase(valFreqMax);  \n        int curr2=1;\n        for(auto i:ump)\n        {\n            int tmp=i.first;            \n            int val=i.second;\n            while(curr<barcodes.size() and val>0 and fl==0)\n            {\n                barcodes[curr]=tmp;\n                val--;\n                curr=curr+2;\n                if(curr>=barcodes.size())fl=1;\n            }\n            while(curr2<barcodes.size() and val>0 and fl==1)\n            {\n                barcodes[curr2]=tmp;\n                val--;\n                curr2=curr2+2;\n            }\n        }\n        return barcodes;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111","title_slug":"distant-barcodes"}