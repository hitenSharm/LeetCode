{"id":531064706,"lang":"cpp","time":"1 month, 1 week","timestamp":1627736971,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/531064706/","is_pending":"Not Pending","title":"Delete Node in a BST","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n\n    void deletion(TreeNode* root,TreeNode* parent)\n    {\n        if(!root->left and !root->right)\n        {\n            if(parent->left==root)parent->left=nullptr;\n            if(parent->right==root)parent->right=nullptr;\n            return ;\n        }\n        if(!root->left)\n        {\n            if(parent->left==root)parent->left=root->right;\n            if(parent->right==root)parent->right=root->right;\n            return ;\n        }\n        if(!root->right)\n        {\n            if(parent->left==root)parent->left=root->left;\n            if(parent->right==root)parent->right=root->left;\n            return ;\n        }\n        if(parent->left==root)\n        {\n            TreeNode* temp=root;\n            parent->left=temp->right;\n            root=parent->left;\n            root->left=temp->left;\n            return ;\n        }\n        if(parent->right==root)\n        {\n            TreeNode* temp=root;\n            parent->right=temp->right;\n            root=parent->right;\n            root->right=temp->right;\n            return ;\n        }\n    }\n\n    bool search(TreeNode* root,TreeNode* parent,int& key)\n    {\n        if(!root)return false;\n        if(root->val==key)\n        {\n            deletion(root,parent);\n            return true;\n        }\n        if(root->val>key)\n        {\n            search(root->left,root,key);\n        }\n        if(root->val<key)\n        {\n            search(root->right,root,key);\n        }\n        return false;\n    }\n\n    TreeNode* deleteNode(TreeNode* root, int key) {\n        search(root,nullptr,key);\n        return root;\n    }\n};","compare_result":"1110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"delete-node-in-a-bst"}