{"id":546118588,"lang":"cpp","time":"2Â weeks","timestamp":1630243074,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/546118588/","is_pending":"Not Pending","title":"Maximum Product Subarray","memory":"11.9 MB","code":"#pragma GCC optimize(\"Ofast\")  \n#pragma GCC target(\"avx,avx2,fma\") \nstatic auto _ = [] ()\n{ios_base::sync_with_stdio(false);cin.tie(nullptr);cout.tie(nullptr);return 0;}();\n\nclass Solution {\npublic:\n    int maxProduct(vector<int>& nums) {\n        int prevMax=nums[0],prevMin=nums[0];\n        int ans=prevMax;\n        for(int i=1;i<nums.size();i++)\n        {\n            int temp=prevMax;\n            prevMax=max(prevMax*nums[i],max(prevMin*nums[i],nums[i]));            \n            prevMin=min(temp*nums[i],min(prevMin*nums[i],nums[i]));            \n            ans=max({prevMin,prevMax,ans});\n        }\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-product-subarray"}