{"id":482511624,"lang":"cpp","time":"4 months, 3 weeks","timestamp":1618814318,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/482511624/","is_pending":"Not Pending","title":"Maximum Product Subarray","memory":"N/A","code":"#pragma GCC optimize(\"Ofast\")  \n#pragma GCC target(\"avx,avx2,fma\") \nstatic auto _ = [] ()\n{ios_base::sync_with_stdio(false);cin.tie(nullptr);cout.tie(nullptr);return 0;}();\nclass Solution {\npublic:\n    int maxProduct(vector<int>& nums) {\n        int prod=1;\n        int mini=nums[0];\n        int maxProd=nums[0];\n        int maxi=mini;\n        for(int i=0;i<nums.size();i++)\n        {\n            mini=min(mini,nums[i]);\n            maxi=max(maxi,nums[i]);\n            prod=prod*nums[i];\n            maxProd=max(maxProd,prod);\n        }\n        \n        for(int i=0;i<nums.size();i++)\n        {\n            if(nums[i]!=0)\n            {\n              prod=prod/nums[i];\n              maxProd=max(maxProd,prod);  \n            }\n            else\n                continue;\n        }\n        return max(maxi,maxProd);\n    }\n};","compare_result":"1101111111111111111110111111111011111011111111111111111101111111111111101101111111111110101101010111011101111111101011111010101111100011110011110110101111100111101011001111010100000101001","title_slug":"maximum-product-subarray"}