{"id":553561946,"lang":"cpp","time":"20 hours, 55 minutes","timestamp":1631436302,"status_display":"Accepted","runtime":"23 ms","url":"/submissions/detail/553561946/","is_pending":"Not Pending","title":"Insert Interval","memory":"18.4 MB","code":"#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx,avx2,fma\")\nstatic auto _ = []() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n  return 0;\n}();\n\nclass Solution {\npublic:\n    vector<vector<int>> insert(vector<vector<int>>& intervals, vector<int>& newInterval) {\n        vector<vector<int>>ans;\n        vector<vector<int>>tmp;\n        int fl=0;        \n        for(int i=0;i<intervals.size();i++)\n        {\n            if(intervals[i][0]>=newInterval[0] and fl==0)\n            {\n                tmp.push_back(newInterval);\n                fl=1;\n                i--;\n            }\n            else\n            tmp.push_back(intervals[i]);\n        }\n        if(fl==0)tmp.push_back(newInterval);\n        int s=tmp[0][0],e=tmp[0][1];\n        \n        for(int i=1;i<tmp.size();i++)\n        {\n            if(tmp[i][0]>e)\n            {\n                ans.push_back({s,e});\n                s=tmp[i][0];\n            }                        \n            e=max(e,tmp[i][1]);\n        }\n        ans.push_back({s,e});\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"insert-interval"}