{"id":484518866,"lang":"cpp","time":"4 months, 3 weeks","timestamp":1619253522,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/484518866/","is_pending":"Not Pending","title":"Ones and Zeroes","memory":"N/A","code":"#pragma GCC optimize(\"Ofast\")  \n#pragma GCC target(\"avx,avx2,fma\") \nstatic auto _ = [] ()\n{ios_base::sync_with_stdio(false);cin.tie(nullptr);cout.tie(nullptr);return 0;}();\n\nclass Solution {\npublic:\n    \n    int memo[601][101][101];\n    \n    int recu(vector<string>& strs , int m, int n,int index)\n    {\n        if(index>=strs.size() || m<0 || n<0)\n            return 0;   \n        if(m==0 && n==0)\n            return 0;\n    \n    if(memo[index][m][n]!=-1)\n    return memo[index][m][n];\n    \n    int newm=m;\n    int newn=n;\n    string s=strs[index];\n    \n    for(int i=0;i<s.length();i++)\n    {\n        if(s[i]=='0')\n        newm--;\n        else\n        newn--;\n    }\n        \n        return memo[index][m][n]=max(recu(strs,m,n,index+1),1+recu(strs,newm,newn,index+1));\n    }\n\n\n    int findMaxForm(vector<string>& strs, int m, int n) {\n        memset(memo,-1,sizeof(memo));\n        int ans=recu(strs,m,n,0);\n        return ans;\n    }\n};","compare_result":"1110111111111111101101111111110111111010110000010011000111111111101011","title_slug":"ones-and-zeroes"}