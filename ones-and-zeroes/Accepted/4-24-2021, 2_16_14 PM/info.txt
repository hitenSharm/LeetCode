{"id":484520543,"lang":"cpp","time":"4 months, 3 weeks","timestamp":1619253974,"status_display":"Accepted","runtime":"248 ms","url":"/submissions/detail/484520543/","is_pending":"Not Pending","title":"Ones and Zeroes","memory":"36.3 MB","code":"#pragma GCC optimize(\"Ofast\")  \n#pragma GCC target(\"avx,avx2,fma\") \nstatic auto _ = [] ()\n{ios_base::sync_with_stdio(false);cin.tie(nullptr);cout.tie(nullptr);return 0;}();\n\nclass Solution {\npublic:\n    \n    int memo[601][101][101];\n    \n    int recu(vector<string>& strs , int m, int n,int index)\n    {\n        if(index>=strs.size() || m<0 || n<0)\n            return 0;   \n        if(m==0 && n==0)\n            return 0;\n    \n    if(memo[index][m][n]!=-1)\n    return memo[index][m][n];\n    \n    string s=strs[index];    \n    int zero=count(s.begin(),s.end(),'0');\n    int one=s.length()-zero;\n    \n    if(m>=zero && n>=one){\n        return memo[index][m][n]=max(recu(strs,m,n,index+1),1+recu(strs,m-zero,n-one,index+1));\n    }\n    else{\n        return memo[index][m][n]=recu(strs,m,n,index+1);\n    }\n    }\n\n\n    int findMaxForm(vector<string>& strs, int m, int n) {\n        memset(memo,-1,sizeof(memo));\n        int ans=recu(strs,m,n,0);\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"ones-and-zeroes"}