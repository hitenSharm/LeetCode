{"id":496589348,"lang":"cpp","time":"3 months, 3 weeks","timestamp":1621676916,"status_display":"Accepted","runtime":"68 ms","url":"/submissions/detail/496589348/","is_pending":"Not Pending","title":"Subarray Product Less Than K","memory":"91.7 MB","code":"#pragma GCC optimize(\"Ofast\")  \n#pragma GCC target(\"avx,avx2,fma\") \nstatic auto _ = [] ()\n{ios_base::sync_with_stdio(false);cin.tie(nullptr);cout.tie(nullptr);return 0;}();\n\nclass Solution {\npublic:\n    int numSubarrayProductLessThanK(vector<int>& nums, int k) {\n        long i=0;long j=0;\n        long n=nums.size();\n        long prod=1;\n        long ans=0;\n        long pj=0;\n        long fl=0;        \n        while(i<n && j<n)\n        {        \t\n        \twhile(j<n && (prod*nums[j])<k)\n        \t{\n        \t\tprod=prod*nums[j];                \n        \t\tj++;         \t\t\n        \t}\n        \tlong len=j-i;            \n        \tlong temp1=len*(len+1)/2;\n        \tif(fl==0)\n        \t{                                \n        \t\tfl=1;\n        \t\tans+=temp1;\n        \t}\n        \telse\n        \t{\n        \t\tlong len2=pj-i+1;\n        \t\tlong temp2=len2*(len2+1)/2;\n        \t\tans=ans+(temp1-temp2);\n        \t}\n        \tprod=prod/nums[i];\n        \ti++;\n        \tif(i>j)\n            {\n                fl=0;\n                j=i;\n                prod=1;\n            }            \n            pj=j-1;    \n            \n        }\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"subarray-product-less-than-k"}