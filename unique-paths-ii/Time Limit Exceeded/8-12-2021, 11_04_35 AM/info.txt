{"id":537202696,"lang":"cpp","time":"1Â month","timestamp":1628746475,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/537202696/","is_pending":"Not Pending","title":"Unique Paths II","memory":"N/A","code":"#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx,avx2,fma\")\nstatic auto _ = []() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n  return 0;\n}();\n\nclass Solution {\npublic:\n\n    int ans=0;\n    int dirs[3]={1,0,1};\n    \n    void recu(vector<vector<int>>& obstacleGrid,int i,int j)\n    {\n        if(i==obstacleGrid.size()-1 and j==obstacleGrid[0].size()-1)\n        {\n            ans++;\n            return ;\n        }\n        for(int k=0;k<2;k++)\n        {\n            int newI=i+dirs[k],newJ=j+dirs[k+1];\n            if(newI>=0 and newI<obstacleGrid.size() and newJ>=0 and newJ<obstacleGrid[0].size() and obstacleGrid[newI][newJ]==0)\n            {\n                obstacleGrid[newI][newJ]=1;\n                recu(obstacleGrid,newI,newJ);\n                obstacleGrid[newI][newJ]=0;\n            }\n        }\n        return ;\n    }\n\n    int uniquePathsWithObstacles(vector<vector<int>>& obstacleGrid) {\n        if(obstacleGrid[0][0]==1 || obstacleGrid[obstacleGrid.size()-1][obstacleGrid[0].size()-1]==1)return 0;\n        obstacleGrid[0][0]=1;\n        recu(obstacleGrid,0,0);\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111100000000000000","title_slug":"unique-paths-ii"}