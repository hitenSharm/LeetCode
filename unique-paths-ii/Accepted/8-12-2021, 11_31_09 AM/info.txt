{"id":537214776,"lang":"cpp","time":"1Â month","timestamp":1628748069,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/537214776/","is_pending":"Not Pending","title":"Unique Paths II","memory":"7.7 MB","code":"#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx,avx2,fma\")\nstatic auto _ = []() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n  return 0;\n}();\n\nclass Solution {\npublic:\n    int dirs[3]={1,0,1};\n    int dp[101][101];\n    \n    int recu(vector<vector<int>>& obstacleGrid,int i,int j)\n    {\n        if(dp[i][j]!=-1)return dp[i][j];\n        \n        if(i==obstacleGrid.size()-1 and j==obstacleGrid[0].size()-1)return 1;\n        \n        dp[i][j]=0;\n        for(int k=0;k<2;k++)\n        {\n            int newI=i+dirs[k],newJ=j+dirs[k+1];\n            if(newI>=0 and newI<obstacleGrid.size() and newJ>=0 and newJ<obstacleGrid[0].size() and obstacleGrid[newI][newJ]==0)\n            {\n                obstacleGrid[newI][newJ]=1;\n                dp[i][j]=dp[i][j]+recu(obstacleGrid,newI,newJ);\n                obstacleGrid[newI][newJ]=0;\n            }\n        }\n        return dp[i][j];\n    }\n\n    int uniquePathsWithObstacles(vector<vector<int>>& obstacleGrid) {\n        if(obstacleGrid[0][0]==1 || obstacleGrid[obstacleGrid.size()-1][obstacleGrid[0].size()-1]==1)return 0;\n        memset(dp,-1,sizeof(dp));\n        dp[obstacleGrid.size()-1][obstacleGrid[0].size()-1]=1;\n        obstacleGrid[0][0]=1;\n        recu(obstacleGrid,0,0);\n        return dp[0][0];\n    }\n};","compare_result":"11111111111111111111111111111111111111111","title_slug":"unique-paths-ii"}