{"id":522303298,"lang":"cpp","time":"2Â months","timestamp":1626244494,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/522303298/","is_pending":"Not Pending","title":"Find Peak Element","memory":"9 MB","code":"#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx,avx2,fma\")\nstatic auto _ = []() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n  return 0;\n}();\n\nclass Solution {\npublic:\n    int findPeakElement(vector<int>& nums) {\n        if(nums.size()==1)return 0;\n        \n        if(nums.size()>1)\n        {\n            if(nums[0]>nums[1])\n            return 0;\n            \n            if(nums[nums.size()-1]>nums[nums.size()-2])\n            return nums.size()-1;\n        }\n        \n        int l=0,r=nums.size()-1;\n        int peak;\n        while(l<=r)\n        {\n            int m=l + (r-l)/2;\n            if(m+1>nums.size() || m-1<0)break;\n            \n            if(nums[m]>nums[m+1] and nums[m]>nums[m-1])\n            {\n                peak=m;\n                break;\n            }\n            \n            if(nums[m-1]<=nums[m] and nums[m]<=nums[m+1])\n            {\n                l=m;\n                continue;\n            }\n            else\n            r=m;\n        }\n        return peak;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-peak-element"}