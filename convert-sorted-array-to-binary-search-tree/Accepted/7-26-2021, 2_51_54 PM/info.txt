{"id":528502350,"lang":"cpp","time":"1 month, 2 weeks","timestamp":1627291314,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/528502350/","is_pending":"Not Pending","title":"Convert Sorted Array to Binary Search Tree","memory":"21.6 MB","code":"#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx,avx2,fma\")\nstatic auto _ = []() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n  return 0;\n}();\n\nclass Solution {\npublic:\n\n    TreeNode* traverse(int l,int r,vector<int>& nums)\n    {\n        if(l>r)return nullptr;\n        int m=l+(r-l)/2;        \n        TreeNode* root=new TreeNode(nums[m]);        \n        root->left=traverse(l,m-1,nums);        \n        root->right=traverse(m+1,r,nums);\n        return root;\n    }\n\n    TreeNode* sortedArrayToBST(vector<int>& nums) {\n        TreeNode* root=traverse(0,nums.size()-1,nums);\n        return root;\n    }\n};","compare_result":"1111111111111111111111111111111","title_slug":"convert-sorted-array-to-binary-search-tree"}