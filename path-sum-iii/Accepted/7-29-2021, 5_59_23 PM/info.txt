{"id":530121332,"lang":"cpp","time":"1 month, 2 weeks","timestamp":1627561763,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/530121332/","is_pending":"Not Pending","title":"Path Sum III","memory":"15.5 MB","code":"#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx,avx2,fma\")\nstatic auto _ = []() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n  return 0;\n}();\n/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    int getVals(TreeNode* root,int& target,int value)\n    {\n        if(!root)return 0;\n        value=value+root->val;\n        if(value==target)\n        {\n            return (1+getVals(root->left,target,value)+getVals(root->right,target,value));\n        }\n        \n        return (getVals(root->left,target,value)+getVals(root->right,target,value));\n    }\n    \n    int solve(TreeNode* root,int& target)\n    {\n        if(!root) return 0;\n        int ans=0;\n        ans=ans+getVals(root,target,0);\n        ans=ans+solve(root->left,target);\n        ans=ans+solve(root->right,target);\n        return ans;\n    }\n    \n    int pathSum(TreeNode* root, int sum) {\n        int cnt=0;\n        cnt=solve(root,sum);\n        return cnt;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-sum-iii"}