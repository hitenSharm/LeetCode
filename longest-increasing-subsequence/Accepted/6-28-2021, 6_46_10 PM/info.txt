{"id":514415986,"lang":"cpp","time":"2 months, 2 weeks","timestamp":1624886170,"status_display":"Accepted","runtime":"224 ms","url":"/submissions/detail/514415986/","is_pending":"Not Pending","title":"Longest Increasing Subsequence","memory":"11 MB","code":"class Solution {\npublic:\n    int memo[100000];\n    int recu(vector<int>& nums,int i)\n    {\n        \n        if(memo[i]!=-1)\n            return memo[i];\n        int result=1;\n        if(i>=nums.size())\n            return 0;\n        for(int j=i+1;j<nums.size();j++)\n        { \n            if(nums[j]>nums[i])\n            { \n                result=max(result,1+recu(nums,j));\n            }\n        }\n        memo[i]=result;\n        return result;\n    }\n    \n    \n    int lengthOfLIS(vector<int>& nums) {\n        if(nums.size()==0)\n            return 0;\n        memset(memo,-1,sizeof(memo));\n        int result=1;\n        for(int i=0;i<nums.size();i++)\n        {\n             result=max(result,recu(nums,i));\n        }\n        return result;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111","title_slug":"longest-increasing-subsequence"}