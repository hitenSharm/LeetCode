{"id":406013182,"lang":"cpp","time":"11 months, 1 week","timestamp":1602134723,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/406013182/","is_pending":"Not Pending","title":"Longest Increasing Subsequence","memory":"N/A","code":"class Solution {\npublic:\n    int memo[10000];\n    int recu(vector<int>nums,int i)\n    {\n        \n        if(memo[i]!=-1)\n            return memo[i];\n        int result=1;\n        if(i>=nums.size())\n            return 0;\n        for(int j=i+1;j<nums.size();j++)\n        { \n            if(nums[j]>nums[i])\n            { \n                result=max(result,1+recu(nums,j));\n            }\n        }\n        memo[i]=result;\n        return result;\n    }\n    \n    \n    int lengthOfLIS(vector<int>& nums) {\n        memset(memo,-1,sizeof(memo));\n        int result=1;\n        for(int i=0;i<nums.size();i++)\n        {\n             result=max(result,recu(nums,i));\n        }\n        return result;\n    }\n};","compare_result":"101111111111111111111000","title_slug":"longest-increasing-subsequence"}