{"id":510617956,"lang":"cpp","time":"2 months, 3 weeks","timestamp":1624192455,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/510617956/","is_pending":"Not Pending","title":"Course Schedule II","memory":"N/A","code":"#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx,avx2,fma\")\nstatic auto _ = []() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n  return 0;\n}();\n\nclass Solution {\npublic:\n    //topological sort\n    unordered_map<int, vector<int>>adjList;\n    vector<int>vis;\n    stack<int>st;\n\n    void dfs(int start)\n    {\n        vis[start]=1;\n        vector<int>candidates=adjList[start];\n        for(int i=0;i<candidates.size();i++)\n        {\n            if(vis[candidates[i]]==1)continue;\n            dfs(candidates[i]);\n        }\n        st.push(start);\n    }\n\n    vector<int> findOrder(int numCourses, vector<vector<int>>& prerequisites) {\n        vis.resize(numCourses,0);\n        \n        for(int i=0;i<prerequisites.size();i++)\n        {\n            adjList[prerequisites[i][0]].push_back(prerequisites[i][1]);\n        }\n        \n        for(int i=0;i<numCourses;i++)\n        {\n            if(vis[i]==1)continue;\n            dfs(i);\n        }\n        vector<int>sol;\n        while(!st.empty())\n        {\n            sol.push_back(st.top());\n            st.pop();\n        }\n        reverse(sol.begin(),sol.end());\n        return sol;\n    }\n};","compare_result":"11111001111110100000000001000111011000101110","title_slug":"course-schedule-ii"}